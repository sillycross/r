<def f='WebKit/Source/ThirdParty/ANGLE/src/common/mathutil.h' l='805' ll='811' type='void gl::unpackSnorm2x16(uint32_t u, float * f1, float * f2)'/>
<doc f='WebKit/Source/ThirdParty/ANGLE/src/common/mathutil.h' l='799'>// First, unpacks a single 32-bit unsigned integer u into a pair of 16-bit unsigned integers. Then,
// each component is converted to a normalized floating-point value to generate the returned two
// float values. The first float value will be extracted from the least significant bits of the
// input; the last float value will be extracted from the most-significant bits. The conversion for
// unpacked fixed-point value to floating point is done as follows: unpackSnorm2x16 : clamp(f /
// 32767.0, -1, +1)</doc>
<use f='WebKit/Source/ThirdParty/ANGLE/src/compiler/translator/IntermNode.cpp' l='2583' u='c' c='_ZN2sh20TIntermConstantUnion25foldUnaryNonComponentWiseE9TOperator'/>
