<dec f='WebKit/WTF/Headers/wtf/text/Base64.h' l='73' type='Vector&lt;uint8_t&gt; WTF::base64EncodeToVector(Span&lt;const std::byte&gt; , WTF::Base64EncodePolicy  = Base64EncodePolicy::DoNotInsertLFs, WTF::Base64EncodeMap  = Base64EncodeMap::Default)'/>
<use f='WebKit/WTF/Headers/wtf/text/Base64.h' l='129' u='c' c='_ZN3WTF20base64EncodeToVectorENS_4SpanIKhLm18446744073709551615EEENS_18Base64EncodePolicyENS_15Base64EncodeMapE'/>
<use f='WebKit/WTF/Headers/wtf/text/Base64.h' l='134' u='c' c='_ZN3WTF20base64EncodeToVectorENS_4SpanIKcLm18446744073709551615EEENS_18Base64EncodePolicyENS_15Base64EncodeMapE'/>
<use f='WebKit/WTF/Headers/wtf/text/Base64.h' l='144' u='c' c='_ZN3WTF20base64EncodeToVectorEPKvjNS_18Base64EncodePolicyENS_15Base64EncodeMapE'/>
<use f='WebKit/WTF/Headers/wtf/text/Base64.h' l='189' u='c' c='_ZN3WTF23base64URLEncodeToVectorENS_4SpanIKSt4byteLm18446744073709551615EEE'/>
<dec f='WebKit/Source/WTF/wtf/text/Base64.h' l='73' type='Vector&lt;uint8_t&gt; WTF::base64EncodeToVector(Span&lt;const std::byte&gt; , WTF::Base64EncodePolicy  = Base64EncodePolicy::DoNotInsertLFs, WTF::Base64EncodeMap  = Base64EncodeMap::Default)'/>
<use f='WebKit/Source/WTF/wtf/text/Base64.h' l='129' u='c' c='_ZN3WTF20base64EncodeToVectorENS_4SpanIKhLm18446744073709551615EEENS_18Base64EncodePolicyENS_15Base64EncodeMapE'/>
<use f='WebKit/Source/WTF/wtf/text/Base64.h' l='134' u='c' c='_ZN3WTF20base64EncodeToVectorENS_4SpanIKcLm18446744073709551615EEENS_18Base64EncodePolicyENS_15Base64EncodeMapE'/>
<use f='WebKit/Source/WTF/wtf/text/Base64.h' l='144' u='c' c='_ZN3WTF20base64EncodeToVectorEPKvjNS_18Base64EncodePolicyENS_15Base64EncodeMapE'/>
<use f='WebKit/Source/WTF/wtf/text/Base64.h' l='189' u='c' c='_ZN3WTF23base64URLEncodeToVectorENS_4SpanIKSt4byteLm18446744073709551615EEE'/>
<def f='WebKit/Source/WTF/wtf/text/Base64.cpp' l='173' ll='176' type='Vector&lt;uint8_t&gt; WTF::base64EncodeToVector(Span&lt;const std::byte&gt; input, WTF::Base64EncodePolicy policy = Base64EncodePolicy::DoNotInsertLFs, WTF::Base64EncodeMap map = Base64EncodeMap::Default)'/>
