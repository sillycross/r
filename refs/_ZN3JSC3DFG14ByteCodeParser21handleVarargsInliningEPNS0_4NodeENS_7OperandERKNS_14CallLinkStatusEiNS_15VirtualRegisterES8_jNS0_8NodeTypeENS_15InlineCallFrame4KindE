<dec f='WebKit/Source/JavaScriptCore/dfg/DFGByteCodeParser.cpp' l='195' type='bool JSC::DFG::ByteCodeParser::handleVarargsInlining(JSC::DFG::Node * callTargetNode, JSC::Operand result, const JSC::CallLinkStatus &amp; , int registerOffset, JSC::VirtualRegister thisArgument, JSC::VirtualRegister argumentsArgument, unsigned int argumentsOffset, JSC::DFG::NodeType callOp, InlineCallFrame::Kind )'/>
<use f='WebKit/Source/JavaScriptCore/dfg/DFGByteCodeParser.cpp' l='1392' u='c' c='_ZN3JSC3DFG14ByteCodeParser17handleVarargsCallEPKNS_11InstructionENS0_8NodeTypeENS_8CallModeE'/>
<def f='WebKit/Source/JavaScriptCore/dfg/DFGByteCodeParser.cpp' l='1948' ll='2085' type='bool JSC::DFG::ByteCodeParser::handleVarargsInlining(JSC::DFG::Node * callTargetNode, JSC::Operand result, const JSC::CallLinkStatus &amp; callLinkStatus, int firstFreeReg, JSC::VirtualRegister thisArgument, JSC::VirtualRegister argumentsArgument, unsigned int argumentsOffset, JSC::DFG::NodeType callOp, InlineCallFrame::Kind kind)'/>
<doc f='WebKit/Source/JavaScriptCore/dfg/DFGByteCodeParser.cpp' l='194'>// Handle inlining. Return true if it succeeded, false if we need to plant a call.</doc>
