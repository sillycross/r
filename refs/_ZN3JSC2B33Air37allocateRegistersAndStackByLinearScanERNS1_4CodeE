<dec f='WebKit/Source/JavaScriptCore/b3/air/AirAllocateRegistersAndStackByLinearScan.h' l='49' type='void JSC::B3::Air::allocateRegistersAndStackByLinearScan(JSC::B3::Air::Code &amp; )'/>
<def f='WebKit/Source/JavaScriptCore/b3/air/AirAllocateRegistersAndStackByLinearScan.cpp' l='687' ll='696' type='void JSC::B3::Air::allocateRegistersAndStackByLinearScan(JSC::B3::Air::Code &amp; code)'/>
<doc f='WebKit/Source/JavaScriptCore/b3/air/AirAllocateRegistersAndStackByLinearScan.h' l='37'>// This implements the Poletto and Sarkar register allocator called &quot;linear scan&quot;:
// http://dl.acm.org/citation.cfm?id=330250
//
// This is not Air&apos;s primary register allocator. We use it only when running at optLevel&lt;2.
// That&apos;s not the default level. This register allocator is optimized primarily for running
// quickly. It&apos;s expected that improvements to this register allocator should focus on improving
// its execution time without much regard for the quality of generated code. If you want good
// code, use graph coloring.
//
// For Air&apos;s primary register allocator, see AirAllocateRegistersByGraphColoring.h|cpp.
//
// This also does stack allocation as an afterthought. It does not do any spill coalescing.</doc>
<use f='WebKit/Source/JavaScriptCore/b3/air/AirGenerate.cpp' l='117' u='c' c='_ZN3JSC2B33Air20prepareForGenerationERNS1_4CodeE'/>
