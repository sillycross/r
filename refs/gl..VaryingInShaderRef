<inh f='WebKit/Source/ThirdParty/ANGLE/src/common/angleutils.h' l='43' c='angle::NonCopyable'/>
<def f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/VaryingPacking.h' l='35' ll='50'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/VaryingPacking.h' l='38' c='_ZN2gl18VaryingInShaderRefC1EOS0_'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/VaryingPacking.h' l='41' c='_ZN2gl18VaryingInShaderRefaSEOS0_'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/VaryingPacking.h' l='41' c='_ZN2gl18VaryingInShaderRefaSEOS0_'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/VaryingPacking.h' l='63' c='_ZN2gl13PackedVaryingC1EONS_18VaryingInShaderRefES2_N2sh17InterpolationTypeE'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/VaryingPacking.h' l='64' c='_ZN2gl13PackedVaryingC1EONS_18VaryingInShaderRefES2_N2sh17InterpolationTypeE'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/VaryingPacking.h' l='66' c='_ZN2gl13PackedVaryingC1EONS_18VaryingInShaderRefES2_N2sh17InterpolationTypeEj'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/VaryingPacking.h' l='67' c='_ZN2gl13PackedVaryingC1EONS_18VaryingInShaderRefES2_N2sh17InterpolationTypeEj'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/VaryingPacking.h' l='93' c='_ZNK2gl13PackedVarying8fullNameB5cxx11ENS_10ShaderTypeE'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/VaryingPacking.h' l='116'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/VaryingPacking.h' l='117'/>
<size>80</size>
<doc f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/VaryingPacking.h' l='30'>// A varying can have different names between stages if matched by the location layout qualifier.
// Additionally, same name varyings could still be of two identical struct types with different
// names.  This struct contains information on the varying in one of the two stages.  PackedVarying
// will thus contain two copies of this along with common information, such as interpolation or
// field index.</doc>
<fun r='_ZN2gl18VaryingInShaderRefC1ENS_10ShaderTypeEPKN2sh14ShaderVariableE'/>
<fun r='_ZN2gl18VaryingInShaderRefC1EOS0_'/>
<fun r='_ZN2gl18VaryingInShaderRefD1Ev'/>
<fun r='_ZN2gl18VaryingInShaderRefaSEOS0_'/>
<mbr r='gl::VaryingInShaderRef::varying' o='0' t='const sh::ShaderVariable *'/>
<mbr r='gl::VaryingInShaderRef::stage' o='64' t='gl::ShaderType'/>
<mbr r='gl::VaryingInShaderRef::parentStructName' o='128' t='std::string'/>
<mbr r='gl::VaryingInShaderRef::parentStructMappedName' o='384' t='std::string'/>
