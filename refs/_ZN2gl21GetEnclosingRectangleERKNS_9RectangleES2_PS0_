<dec f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/angletypes.h' l='98' type='void gl::GetEnclosingRectangle(const gl::Rectangle &amp; rect1, const gl::Rectangle &amp; rect2, gl::Rectangle * rectUnion)'/>
<doc f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/angletypes.h' l='90'>// Calculate the smallest rectangle that covers both rectangles.  This rectangle may cover areas
// not covered by the two rectangles, for example in this situation:
//
//   +--+        +----+
//   | ++-+  -&gt;  |    |
//   +-++ |      |    |
//     +--+      +----+
//</doc>
