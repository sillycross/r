<dec f='WebKit/Source/JavaScriptCore/b3/air/AirAllocateRegistersByGraphColoring.h' l='52' type='void JSC::B3::Air::allocateRegistersByGraphColoring(JSC::B3::Air::Code &amp; )'/>
<def f='WebKit/Source/JavaScriptCore/b3/air/AirAllocateRegistersByGraphColoring.cpp' l='2179' ll='2189' type='void JSC::B3::Air::allocateRegistersByGraphColoring(JSC::B3::Air::Code &amp; code)'/>
<doc f='WebKit/Source/JavaScriptCore/b3/air/AirAllocateRegistersByGraphColoring.h' l='43'>// We have two register allocators, both fundamentally derived from Chaitin&apos;s Yorktown
// allocator:
// http://cs.gmu.edu/~white/CS640/p98-chaitin.pdf
//
// We have an implementation of Briggs&apos;s optimistic allocator which is derivative of Chaitin&apos;s allocator:
// http://www.cs.utexas.edu/users/mckinley/380C/lecs/briggs-thesis-1992.pdf
//
// And an implementation of Andrew Appel&apos;s Iterated Register Coalescing which is derivative of Briggs&apos;s allocator.
// http://www.cs.cmu.edu/afs/cs/academic/class/15745-s07/www/papers/george.pdf</doc>
<use f='WebKit/Source/JavaScriptCore/b3/air/AirGenerate.cpp' l='134' u='c' c='_ZN3JSC2B33Air20prepareForGenerationERNS1_4CodeE'/>
