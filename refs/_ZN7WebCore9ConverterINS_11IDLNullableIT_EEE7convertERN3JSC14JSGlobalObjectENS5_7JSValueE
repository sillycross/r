<def f='WebKit/Source/WebCore/bindings/js/JSDOMConvertNullable.h' l='71' ll='76' type='static WebCore::Converter&lt;IDLNullable&lt;type-parameter-0-0&gt; &gt;::ReturnType WebCore::Converter&lt;IDLNullable&lt;type-parameter-0-0&gt; &gt;::convert(JSC::JSGlobalObject &amp; lexicalGlobalObject, JSC::JSValue value)'/>
<doc f='WebKit/Source/WebCore/bindings/js/JSDOMConvertNullable.h' l='61'>// 1. If Type(V) is not Object, and the conversion to an IDL value is being performed
    // due to V being assigned to an attribute whose type is a nullable callback function
    // that is annotated with [LegacyTreatNonObjectAsNull], then return the IDL nullable
    // type T? value null.
    //
    // NOTE: Handled elsewhere.
    //
    // 2. Otherwise, if V is null or undefined, then return the IDL nullable type T? value null.
    // 3. Otherwise, return the result of converting V using the rules for the inner IDL type T.</doc>
