<inh f='WebKit/Source/ThirdParty/ANGLE/src/compiler/translator/tree_util/IntermTraverse.h' l='297' c='sh::TLValueTrackingTraverser'/>
<def f='WebKit/Source/ThirdParty/ANGLE/src/compiler/translator/tree_ops/EmulatePrecision.h' l='24' ll='82'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/compiler/translator/Compiler.cpp' l='1161' c='_ZN2sh9TCompiler24emulatePrecisionIfNeededEPNS_12TIntermBlockERNS_13TInfoSinkBaseEPb14ShShaderOutput'/>
<size>408</size>
<fun r='_ZN2sh16EmulatePrecisionC1EPNS_12TSymbolTableE'/>
<fun r='_ZN2sh16EmulatePrecision11visitSymbolEPNS_13TIntermSymbolE'/>
<fun r='_ZN2sh16EmulatePrecision11visitBinaryENS_5VisitEPNS_13TIntermBinaryE'/>
<fun r='_ZN2sh16EmulatePrecision10visitUnaryENS_5VisitEPNS_12TIntermUnaryE'/>
<fun r='_ZN2sh16EmulatePrecision14visitAggregateENS_5VisitEPNS_16TIntermAggregateE'/>
<fun r='_ZN2sh16EmulatePrecision31visitGlobalQualifierDeclarationENS_5VisitEPNS_33TIntermGlobalQualifierDeclarationE'/>
<fun r='_ZN2sh16EmulatePrecision16visitDeclarationENS_5VisitEPNS_18TIntermDeclarationE'/>
<fun r='_ZN2sh16EmulatePrecision21writeEmulationHelpersERNS_13TInfoSinkBaseEi14ShShaderOutput'/>
<fun r='_ZN2sh16EmulatePrecision19SupportedInLanguageE14ShShaderOutput'/>
<fun r='_ZN2sh16EmulatePrecision19getInternalFunctionERKNS_15ImmutableStringERKNS_5TTypeEPNS_7TVectorIPNS_11TIntermNodeEEERKNS7_IPKNS_9TVariableEEEb'/>
<fun r='_ZN2sh16EmulatePrecision30createRoundingFunctionCallNodeEPNS_12TIntermTypedE'/>
<fun r='_ZN2sh16EmulatePrecision40createCompoundAssignmentFunctionCallNodeEPNS_12TIntermTypedES2_PKc'/>
<mbr r='sh::EmulatePrecision::mEmulateCompoundAdd' o='1280' t='sh::EmulatePrecision::EmulationSet'/>
<mbr r='sh::EmulatePrecision::mEmulateCompoundSub' o='1664' t='sh::EmulatePrecision::EmulationSet'/>
<mbr r='sh::EmulatePrecision::mEmulateCompoundMul' o='2048' t='sh::EmulatePrecision::EmulationSet'/>
<mbr r='sh::EmulatePrecision::mEmulateCompoundDiv' o='2432' t='sh::EmulatePrecision::EmulationSet'/>
<mbr r='sh::EmulatePrecision::mInternalFunctions' o='2816' t='TMap&lt;sh::ImmutableString, const sh::TFunction *&gt;'/>
<mbr r='sh::EmulatePrecision::mDeclaringVariables' o='3200' t='bool'/>
