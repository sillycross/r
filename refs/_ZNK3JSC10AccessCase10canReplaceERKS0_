<dec f='WebKit/Source/JavaScriptCore/bytecode/AccessCase.h' l='233' type='bool JSC::AccessCase::canReplace(const JSC::AccessCase &amp; other) const'/>
<doc f='WebKit/Source/JavaScriptCore/bytecode/AccessCase.h' l='230'>// If this method returns true, then it&apos;s a good idea to remove &apos;other&apos; from the access once &apos;this&apos;
    // is added. This method assumes that in case of contradictions, &apos;this&apos; represents a newer, and so
    // more useful, truth. This method can be conservative; it will return false when it doubt.</doc>
<def f='WebKit/Source/JavaScriptCore/bytecode/AccessCase.cpp' l='601' ll='714' type='bool JSC::AccessCase::canReplace(const JSC::AccessCase &amp; other) const'/>
<use f='WebKit/Source/JavaScriptCore/bytecode/PolymorphicAccess.cpp' l='281' u='c' c='_ZN3JSC17PolymorphicAccess8addCasesERKNS_24GCSafeConcurrentJSLockerERNS_2VMEPNS_9CodeBlockERNS_17StructureStubInfoEN3WTF6VectorINSA_6RefPtrINS_10Acces1020059'/>
<use f='WebKit/Source/JavaScriptCore/bytecode/PolymorphicAccess.cpp' l='468' u='c' c='_ZN3JSC17PolymorphicAccess10regenerateERKNS_24GCSafeConcurrentJSLockerERNS_2VMEPNS_14JSGlobalObjectEPNS_9CodeBlockENS_8ECMAModeERNS_17StructureStubInfoE'/>
