<use f='WebKit/WTF/Headers/wtf/ParkingLot.h' l='82' u='c' c='_ZN3WTF10ParkingLot17parkConditionallyEPKvRKT_RKT0_RKNS_24TimeWithDynamicClockTypeE'/>
<dec f='WebKit/WTF/Headers/wtf/ParkingLot.h' l='166' type='static WTF::ParkingLot::ParkResult WTF::ParkingLot::parkConditionallyImpl(const void * address, const ScopedLambda&lt;bool ()&gt; &amp; validation, const ScopedLambda&lt;void ()&gt; &amp; beforeSleep, const WTF::TimeWithDynamicClockType &amp; timeout)'/>
<use f='WebKit/Source/WTF/wtf/ParkingLot.h' l='82' u='c' c='_ZN3WTF10ParkingLot17parkConditionallyEPKvRKT_RKT0_RKNS_24TimeWithDynamicClockTypeE'/>
<dec f='WebKit/Source/WTF/wtf/ParkingLot.h' l='166' type='static WTF::ParkingLot::ParkResult WTF::ParkingLot::parkConditionallyImpl(const void * address, const ScopedLambda&lt;bool ()&gt; &amp; validation, const ScopedLambda&lt;void ()&gt; &amp; beforeSleep, const WTF::TimeWithDynamicClockType &amp; timeout)'/>
<def f='WebKit/Source/WTF/wtf/ParkingLot.cpp' l='561' ll='657' macro='1' type='static ParkingLot::ParkResult WTF::ParkingLot::parkConditionallyImpl(const void * address, const ScopedLambda&lt;bool ()&gt; &amp; validation, const ScopedLambda&lt;void ()&gt; &amp; beforeSleep, const WTF::TimeWithDynamicClockType &amp; timeout)'/>
