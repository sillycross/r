<def f='WebKit/Source/ThirdParty/ANGLE/src/common/mathutil.h' l='819' ll='825' type='uint32_t gl::packUnorm2x16(float f1, float f2)'/>
<doc f='WebKit/Source/ThirdParty/ANGLE/src/common/mathutil.h' l='813'>// First, both normalized floating-point values are converted into 16-bit integer values.
// Then, the results are packed into the returned 32-bit unsigned integer.
// The first float value will be written to the least significant bits of the output;
// the last float value will be written to the most significant bits.
// The conversion of each value to fixed point is done as follows:
// packUnorm2x16 : round(clamp(c, 0, +1) * 65535.0)</doc>
<use f='WebKit/Source/ThirdParty/ANGLE/src/compiler/translator/IntermNode.cpp' l='2594' u='c' c='_ZN2sh20TIntermConstantUnion25foldUnaryNonComponentWiseE9TOperator'/>
