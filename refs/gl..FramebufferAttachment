<def f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/FramebufferAttachment.h' l='53' ll='190'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/FramebufferAttachment.h' l='65' c='_ZN2gl21FramebufferAttachmentC1EOS0_'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/FramebufferAttachment.h' l='66' c='_ZN2gl21FramebufferAttachmentaSEOS0_'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/FramebufferAttachment.h' l='66' c='_ZN2gl21FramebufferAttachmentaSEOS0_'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/FramebufferAttachment.h' l='149' c='_ZNK2gl21FramebufferAttachmenteqERKS0_'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/FramebufferAttachment.h' l='150' c='_ZNK2gl21FramebufferAttachmentneERKS0_'/>
<size>48</size>
<doc f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/FramebufferAttachment.h' l='47'>// FramebufferAttachment implements a GL framebuffer attachment.
// Attachments are &quot;light&quot; containers, which store pointers to ref-counted GL objects.
// We support GL texture (2D/3D/Cube/2D array) and renderbuffer object attachments.
// Note: Our old naming scheme used the term &quot;Renderbuffer&quot; for both GL renderbuffers and for
// framebuffer attachments, which confused their usage.</doc>
<fun r='_ZN2gl21FramebufferAttachmentC1Ev'/>
<fun r='_ZN2gl21FramebufferAttachmentC1EPKNS_7ContextEjjRKNS_10ImageIndexEPNS_27FramebufferAttachmentObjectEN2rx6SerialE'/>
<fun r='_ZN2gl21FramebufferAttachmentC1EOS0_'/>
<fun r='_ZN2gl21FramebufferAttachmentaSEOS0_'/>
<fun r='_ZN2gl21FramebufferAttachmentD1Ev'/>
<fun r='_ZN2gl21FramebufferAttachment6detachEPKNS_7ContextEN2rx6SerialE'/>
<fun r='_ZN2gl21FramebufferAttachment6attachEPKNS_7ContextEjjRKNS_10ImageIndexEPNS_27FramebufferAttachmentObjectEijbiN2rx6SerialE'/>
<fun r='_ZNK2gl21FramebufferAttachment10getRedSizeEv'/>
<fun r='_ZNK2gl21FramebufferAttachment12getGreenSizeEv'/>
<fun r='_ZNK2gl21FramebufferAttachment11getBlueSizeEv'/>
<fun r='_ZNK2gl21FramebufferAttachment12getAlphaSizeEv'/>
<fun r='_ZNK2gl21FramebufferAttachment12getDepthSizeEv'/>
<fun r='_ZNK2gl21FramebufferAttachment14getStencilSizeEv'/>
<fun r='_ZNK2gl21FramebufferAttachment16getComponentTypeEv'/>
<fun r='_ZNK2gl21FramebufferAttachment16getColorEncodingEv'/>
<fun r='_ZNK2gl21FramebufferAttachment15isTextureWithIdENS_9TextureIDE'/>
<fun r='_ZNK2gl21FramebufferAttachment20isRenderbufferWithIdEj'/>
<fun r='_ZNK2gl21FramebufferAttachment10getBindingEv'/>
<fun r='_ZNK2gl21FramebufferAttachment2idEv'/>
<fun r='_ZNK2gl21FramebufferAttachment20getTextureImageIndexEv'/>
<fun r='_ZNK2gl21FramebufferAttachment11cubeMapFaceEv'/>
<fun r='_ZNK2gl21FramebufferAttachment8mipLevelEv'/>
<fun r='_ZNK2gl21FramebufferAttachment5layerEv'/>
<fun r='_ZNK2gl21FramebufferAttachment9isLayeredEv'/>
<fun r='_ZNK2gl21FramebufferAttachment11getNumViewsEv'/>
<fun r='_ZNK2gl21FramebufferAttachment11isMultiviewEv'/>
<fun r='_ZNK2gl21FramebufferAttachment16getBaseViewIndexEv'/>
<fun r='_ZNK2gl21FramebufferAttachment25getRenderToTextureSamplesEv'/>
<fun r='_ZNK2gl21FramebufferAttachment7getSizeEv'/>
<fun r='_ZNK2gl21FramebufferAttachment9getFormatEv'/>
<fun r='_ZNK2gl21FramebufferAttachment10getSamplesEv'/>
<fun r='_ZNK2gl21FramebufferAttachment18getResourceSamplesEv'/>
<fun r='_ZNK2gl21FramebufferAttachment4typeEv'/>
<fun r='_ZNK2gl21FramebufferAttachment10isAttachedEv'/>
<fun r='_ZNK2gl21FramebufferAttachment12isRenderableEPKNS_7ContextE'/>
<fun r='_ZNK2gl21FramebufferAttachment15getRenderbufferEv'/>
<fun r='_ZNK2gl21FramebufferAttachment10getTextureEv'/>
<fun r='_ZNK2gl21FramebufferAttachment10getSurfaceEv'/>
<fun r='_ZNK2gl21FramebufferAttachment11getResourceEv'/>
<fun r='_ZNK2gl21FramebufferAttachment9initStateEv'/>
<fun r='_ZN2gl21FramebufferAttachment18initializeContentsEPKNS_7ContextE'/>
<fun r='_ZNK2gl21FramebufferAttachment12setInitStateENS_9InitStateE'/>
<fun r='_ZNK2gl21FramebufferAttachment15getRenderTargetEPKNS_7ContextEiPPT_'/>
<fun r='_ZNK2gl21FramebufferAttachmenteqERKS0_'/>
<fun r='_ZNK2gl21FramebufferAttachmentneERKS0_'/>
<smbr r='gl::FramebufferAttachment::kDefaultNumViews' t='const GLsizei'/>
<smbr r='gl::FramebufferAttachment::kDefaultBaseViewIndex' t='const GLint'/>
<smbr r='gl::FramebufferAttachment::kDefaultRenderToTextureSamples' t='const GLint'/>
<fun r='_ZNK2gl21FramebufferAttachment19getRenderTargetImplEPKNS_7ContextEiPPN2rx33FramebufferAttachmentRenderTargetE'/>
<mbr r='gl::FramebufferAttachment::mType' o='0' t='GLenum'/>
<mbr r='gl::FramebufferAttachment::mTarget' o='32' t='gl::FramebufferAttachment::Target'/>
<mbr r='gl::FramebufferAttachment::mResource' o='192' t='gl::FramebufferAttachmentObject *'/>
<mbr r='gl::FramebufferAttachment::mNumViews' o='256' t='GLsizei'/>
<mbr r='gl::FramebufferAttachment::mIsMultiview' o='288' t='bool'/>
<mbr r='gl::FramebufferAttachment::mBaseViewIndex' o='320' t='GLint'/>
<mbr r='gl::FramebufferAttachment::mRenderToTextureSamples' o='352' t='GLsizei'/>
<fun r='_ZNK2gl21FramebufferAttachment20getTextureImageIndexEv'/>
<fun r='_ZNK2gl21FramebufferAttachment7getSizeEv'/>
<fun r='_ZNK2gl21FramebufferAttachment9getFormatEv'/>
<fun r='_ZNK2gl21FramebufferAttachment10getSamplesEv'/>
<fun r='_ZNK2gl21FramebufferAttachment18getResourceSamplesEv'/>
<fun r='_ZNK2gl21FramebufferAttachment19getRenderTargetImplEPKNS_7ContextEiPPN2rx33FramebufferAttachmentRenderTargetE'/>
<fun r='_ZNK2gl21FramebufferAttachment12isRenderableEPKNS_7ContextE'/>
