<use f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/WorkerThread.h' l='46' c='_ZN5angle13WaitableEvent19setWorkerThreadPoolESt10shared_ptrINS_16WorkerThreadPoolEE'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/WorkerThread.h' l='59'/>
<inh f='WebKit/Source/ThirdParty/ANGLE/src/common/angleutils.h' l='43' c='angle::NonCopyable'/>
<def f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/WorkerThread.h' l='72' ll='90'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/WorkerThread.h' l='78' c='_ZN5angle16WorkerThreadPool6CreateEb'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/WorkerThread.h' l='79' c='_ZN5angle16WorkerThreadPool14PostWorkerTaskESt10shared_ptrIS0_ES1_INS_7ClosureEE'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/Context.h' l='597' c='_ZNK2gl7Context19getWorkerThreadPoolEv'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/Context.h' l='796'/>
<size>8</size>
<doc f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/WorkerThread.h' l='70'>// Request WorkerThreads from the WorkerThreadPool. Each pool can keep worker threads around so
// we avoid the costly spin up and spin down time.</doc>
<fun r='_ZN5angle16WorkerThreadPoolC1Ev'/>
<fun r='_ZN5angle16WorkerThreadPoolD1Ev'/>
<fun r='_ZN5angle16WorkerThreadPool6CreateEb'/>
<fun r='_ZN5angle16WorkerThreadPool14PostWorkerTaskESt10shared_ptrIS0_ES1_INS_7ClosureEE'/>
<fun r='_ZN5angle16WorkerThreadPool13setMaxThreadsEm'/>
<fun r='_ZN5angle16WorkerThreadPool7isAsyncEv'/>
<fun r='_ZN5angle16WorkerThreadPool14postWorkerTaskESt10shared_ptrINS_7ClosureEE'/>
