<def f='WebKit/Source/ThirdParty/ANGLE/include/GLSLANG/ShaderLang.h' l='135' type='const ShCompileOptions'/>
<doc f='WebKit/Source/ThirdParty/ANGLE/include/GLSLANG/ShaderLang.h' l='128'>// This flag ensures all indirect (expression-based) array indexing
// is clamped to the bounds of the array. This ensures, for example,
// that you cannot read off the end of a uniform, whether an array
// vec234, or mat234 type. The ShArrayIndexClampingStrategy enum,
// specified in the ShBuiltInResources when constructing the
// compiler, selects the strategy for the clamping implementation.
// TODO(http://anglebug.com/4361): fix for compute shaders.</doc>
<use f='WebKit/Source/ThirdParty/ANGLE/src/compiler/translator/Compiler.cpp' l='627' u='r' c='_ZN2sh9TCompiler19checkAndSimplifyASTEPNS_12TIntermBlockERKNS_13TParseContextEm'/>
<def f='WebKit/ANGLE/Headers/ANGLE/ShaderLang.h' l='135' type='const ShCompileOptions'/>
<doc f='WebKit/ANGLE/Headers/ANGLE/ShaderLang.h' l='128'>// This flag ensures all indirect (expression-based) array indexing
// is clamped to the bounds of the array. This ensures, for example,
// that you cannot read off the end of a uniform, whether an array
// vec234, or mat234 type. The ShArrayIndexClampingStrategy enum,
// specified in the ShBuiltInResources when constructing the
// compiler, selects the strategy for the clamping implementation.
// TODO(http://anglebug.com/4361): fix for compute shaders.</doc>
<use f='WebKit/Source/WebCore/platform/graphics/opengl/ExtensionsGLOpenGLCommon.cpp' l='193' u='r' c='_ZN7WebCore24ExtensionsGLOpenGLCommon30getTranslatedShaderSourceANGLEEj'/>
