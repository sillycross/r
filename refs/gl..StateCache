<inh f='WebKit/Source/ThirdParty/ANGLE/src/common/angleutils.h' l='43' c='angle::NonCopyable'/>
<def f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/Context.h' l='131' ll='343'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/Context.h' l='599' c='_ZNK2gl7Context13getStateCacheEv'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/Context.h' l='600' c='_ZN2gl7Context13getStateCacheEv'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/Context.h' l='768'/>
<size>264</size>
<doc f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/Context.h' l='130'>// Helper class for managing cache variables and state changes.</doc>
<fun r='_ZN2gl10StateCacheC1Ev'/>
<fun r='_ZN2gl10StateCacheD1Ev'/>
<fun r='_ZN2gl10StateCache10initializeEPNS_7ContextE'/>
<fun r='_ZNK2gl10StateCache28getActiveBufferedAttribsMaskEv'/>
<fun r='_ZNK2gl10StateCache26getActiveClientAttribsMaskEv'/>
<fun r='_ZNK2gl10StateCache27getActiveDefaultAttribsMaskEv'/>
<fun r='_ZNK2gl10StateCache25hasAnyEnabledClientAttribEv'/>
<fun r='_ZNK2gl10StateCache24hasAnyActiveClientAttribEv'/>
<fun r='_ZNK2gl10StateCache33getNonInstancedVertexElementLimitEv'/>
<fun r='_ZNK2gl10StateCache30getInstancedVertexElementLimitEv'/>
<fun r='_ZNK2gl10StateCache23hasBasicDrawStatesErrorEPNS_7ContextE'/>
<fun r='_ZNK2gl10StateCache23getBasicDrawStatesErrorEPKNS_7ContextE'/>
<fun r='_ZNK2gl10StateCache25getBasicDrawElementsErrorEPKNS_7ContextE'/>
<fun r='_ZNK2gl10StateCache15isValidDrawModeENS_13PrimitiveModeE'/>
<fun r='_ZNK2gl10StateCache22isValidBindTextureTypeENS_11TextureTypeE'/>
<fun r='_ZNK2gl10StateCache23isValidDrawElementsTypeENS_16DrawElementsTypeE'/>
<fun r='_ZNK2gl10StateCache33isTransformFeedbackActiveUnpausedEv'/>
<fun r='_ZNK2gl10StateCache29getVertexAttribTypeValidationENS_16VertexAttribTypeE'/>
<fun r='_ZNK2gl10StateCache36getIntegerVertexAttribTypeValidationENS_16VertexAttribTypeE'/>
<fun r='_ZNK2gl10StateCache35getActiveShaderStorageBufferIndicesEv'/>
<fun r='_ZNK2gl10StateCache25getActiveImageUnitIndicesEv'/>
<fun r='_ZNK2gl10StateCache10getCanDrawEv'/>
<fun r='_ZN2gl10StateCache26onVertexArrayBindingChangeEPNS_7ContextE'/>
<fun r='_ZN2gl10StateCache25onProgramExecutableChangeEPNS_7ContextE'/>
<fun r='_ZN2gl10StateCache25onVertexArrayFormatChangeEPNS_7ContextE'/>
<fun r='_ZN2gl10StateCache33onVertexArrayBufferContentsChangeEPNS_7ContextE'/>
<fun r='_ZN2gl10StateCache24onVertexArrayStateChangeEPNS_7ContextE'/>
<fun r='_ZN2gl10StateCache30onVertexArrayBufferStateChangeEPNS_7ContextE'/>
<fun r='_ZN2gl10StateCache24onGLES1ClientStateChangeEPNS_7ContextE'/>
<fun r='_ZN2gl10StateCache23onDrawFramebufferChangeEPNS_7ContextE'/>
<fun r='_ZN2gl10StateCache18onContextCapChangeEPNS_7ContextE'/>
<fun r='_ZN2gl10StateCache20onStencilStateChangeEPNS_7ContextE'/>
<fun r='_ZN2gl10StateCache30onDefaultVertexAttributeChangeEPNS_7ContextE'/>
<fun r='_ZN2gl10StateCache21onActiveTextureChangeEPNS_7ContextE'/>
<fun r='_ZN2gl10StateCache13onQueryChangeEPNS_7ContextE'/>
<fun r='_ZN2gl10StateCache31onActiveTransformFeedbackChangeEPNS_7ContextE'/>
<fun r='_ZN2gl10StateCache26onUniformBufferStateChangeEPNS_7ContextE'/>
<fun r='_ZN2gl10StateCache17onColorMaskChangeEPNS_7ContextE'/>
<fun r='_ZN2gl10StateCache21onBufferBindingChangeEPNS_7ContextE'/>
<fun r='_ZN2gl10StateCache24onBlendFuncIndexedChangeEPNS_7ContextE'/>
<fun r='_ZN2gl10StateCache23updateActiveAttribsMaskEPNS_7ContextE'/>
<fun r='_ZN2gl10StateCache25updateVertexElementLimitsEPNS_7ContextE'/>
<fun r='_ZN2gl10StateCache29updateVertexElementLimitsImplEPNS_7ContextE'/>
<fun r='_ZN2gl10StateCache20updateValidDrawModesEPNS_7ContextE'/>
<fun r='_ZN2gl10StateCache27updateValidBindTextureTypesEPNS_7ContextE'/>
<fun r='_ZN2gl10StateCache28updateValidDrawElementsTypesEPNS_7ContextE'/>
<fun r='_ZN2gl10StateCache26updateBasicDrawStatesErrorEv'/>
<fun r='_ZN2gl10StateCache28updateBasicDrawElementsErrorEv'/>
<fun r='_ZN2gl10StateCache37updateTransformFeedbackActiveUnpausedEPNS_7ContextE'/>
<fun r='_ZN2gl10StateCache33updateVertexAttribTypesValidationEPNS_7ContextE'/>
<fun r='_ZN2gl10StateCache38updateActiveShaderStorageBufferIndicesEPNS_7ContextE'/>
<fun r='_ZN2gl10StateCache28updateActiveImageUnitIndicesEPNS_7ContextE'/>
<fun r='_ZN2gl10StateCache13updateCanDrawEPNS_7ContextE'/>
<fun r='_ZN2gl10StateCache17setValidDrawModesEbbbbb'/>
<fun r='_ZNK2gl10StateCache27getBasicDrawStatesErrorImplEPKNS_7ContextE'/>
<fun r='_ZNK2gl10StateCache29getBasicDrawElementsErrorImplEPKNS_7ContextE'/>
<smbr r='gl::StateCache::kInvalidPointer' t='const intptr_t'/>
<mbr r='gl::StateCache::mCachedActiveBufferedAttribsMask' o='0' t='gl::AttributesMask'/>
<mbr r='gl::StateCache::mCachedActiveClientAttribsMask' o='32' t='gl::AttributesMask'/>
<mbr r='gl::StateCache::mCachedActiveDefaultAttribsMask' o='64' t='gl::AttributesMask'/>
<mbr r='gl::StateCache::mCachedHasAnyEnabledClientAttrib' o='96' t='bool'/>
<mbr r='gl::StateCache::mCachedNonInstancedVertexElementLimit' o='128' t='GLint64'/>
<mbr r='gl::StateCache::mCachedInstancedVertexElementLimit' o='192' t='GLint64'/>
<mbr r='gl::StateCache::mCachedBasicDrawStatesError' o='256' t='intptr_t'/>
<mbr r='gl::StateCache::mCachedBasicDrawElementsError' o='320' t='intptr_t'/>
<mbr r='gl::StateCache::mCachedTransformFeedbackActiveUnpaused' o='384' t='bool'/>
<mbr r='gl::StateCache::mCachedActiveShaderStorageBufferIndices' o='448' t='gl::StorageBuffersMask'/>
<mbr r='gl::StateCache::mCachedActiveImageUnitIndices' o='512' t='gl::ImageUnitMask'/>
<mbr r='gl::StateCache::mCachedValidDrawModes' o='576' t='angle::PackedEnumMap&lt;PrimitiveMode, bool, angle::EnumSize&lt;PrimitiveMode&gt;() + 1&gt;'/>
<mbr r='gl::StateCache::mCachedValidBindTextureTypes' o='696' t='angle::PackedEnumMap&lt;TextureType, bool, angle::EnumSize&lt;TextureType&gt;() + 1&gt;'/>
<mbr r='gl::StateCache::mCachedValidDrawElementsTypes' o='792' t='angle::PackedEnumMap&lt;DrawElementsType, bool, angle::EnumSize&lt;DrawElementsType&gt;() + 1&gt;'/>
<mbr r='gl::StateCache::mCachedVertexAttribTypesValidation' o='832' t='angle::PackedEnumMap&lt;VertexAttribType, VertexAttribTypeCase, angle::EnumSize&lt;VertexAttribType&gt;() + 1&gt;'/>
<mbr r='gl::StateCache::mCachedIntegerVertexAttribTypesValidation' o='1440' t='angle::PackedEnumMap&lt;VertexAttribType, VertexAttribTypeCase, angle::EnumSize&lt;VertexAttribType&gt;() + 1&gt;'/>
<mbr r='gl::StateCache::mCachedCanDraw' o='2048' t='bool'/>
