<dec f='WebKit/Source/ThirdParty/ANGLE/src/compiler/translator/ParseContext.h' l='127' type='bool sh::TParseContext::checkCanBeLValue(const sh::TSourceLoc &amp; line, const char * op, sh::TIntermTyped * node)'/>
<def f='WebKit/Source/ThirdParty/ANGLE/src/compiler/translator/ParseContext.cpp' l='502' ll='670' type='bool sh::TParseContext::checkCanBeLValue(const sh::TSourceLoc &amp; line, const char * op, sh::TIntermTyped * node)'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/compiler/translator/ParseContext.cpp' l='507' u='c' c='_ZN2sh13TParseContext16checkCanBeLValueERKNS_10TSourceLocEPKcPNS_12TIntermTypedE'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/compiler/translator/ParseContext.cpp' l='530' u='c' c='_ZN2sh13TParseContext16checkCanBeLValueERKNS_10TSourceLocEPKcPNS_12TIntermTypedE'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/compiler/translator/ParseContext.cpp' l='1896' u='c' c='_ZN2sh13TParseContext34functionCallRValueLValueErrorCheckEPKNS_9TFunctionEPNS_16TIntermAggregateE'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/compiler/translator/ParseContext.cpp' l='5269' u='c' c='_ZN2sh13TParseContext18addUnaryMathLValueE9TOperatorPNS_12TIntermTypedERKNS_10TSourceLocE'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/compiler/translator/ParseContext.cpp' l='5694' u='c' c='_ZN2sh13TParseContext9addAssignE9TOperatorPNS_12TIntermTypedES3_RKNS_10TSourceLocE'/>
<doc f='WebKit/Source/ThirdParty/ANGLE/src/compiler/translator/ParseContext.cpp' l='500'>// Both test and if necessary, spit out an error, to see if the node is really
// an l-value that can be operated on this way.</doc>
