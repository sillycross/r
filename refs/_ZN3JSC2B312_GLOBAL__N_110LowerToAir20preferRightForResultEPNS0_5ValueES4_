<def f='WebKit/Source/JavaScriptCore/b3/B3LowerToAir.cpp' l='850' ll='887' type='bool JSC::B3::(anonymous namespace)::LowerToAir::preferRightForResult(JSC::B3::Value * left, JSC::B3::Value * right)'/>
<use f='WebKit/Source/JavaScriptCore/b3/B3LowerToAir.cpp' l='1009' u='c' c='_ZN3JSC2B312_GLOBAL__N_110LowerToAir11appendBinOpEPNS0_5ValueES4_'/>
<use f='WebKit/Source/JavaScriptCore/b3/B3LowerToAir.cpp' l='3802' u='c' c='_ZN3JSC2B312_GLOBAL__N_110LowerToAir5lowerEv'/>
<doc f='WebKit/Source/JavaScriptCore/b3/B3LowerToAir.cpp' l='846'>// Call this method when doing two-operand lowering of a commutative operation. You have a choice of
    // which incoming Value is moved into the result. This will select which one is likely to be most
    // profitable to use as the result. Doing the right thing can have big performance consequences in tight
    // kernels.</doc>
