<use f='WebKit/JavaScriptCore/PrivateHeaders/JavaScriptCore/AssemblerCommon.h' l='99' u='c' c='_ZN3JSC21ARM64LogicalImmediate8create32Ej'/>
<use f='WebKit/JavaScriptCore/PrivateHeaders/JavaScriptCore/AssemblerCommon.h' l='106' u='c' c='_ZN3JSC21ARM64LogicalImmediate8create32Ej'/>
<use f='WebKit/JavaScriptCore/PrivateHeaders/JavaScriptCore/AssemblerCommon.h' l='113' u='c' c='_ZN3JSC21ARM64LogicalImmediate8create32Ej'/>
<use f='WebKit/JavaScriptCore/PrivateHeaders/JavaScriptCore/AssemblerCommon.h' l='120' u='c' c='_ZN3JSC21ARM64LogicalImmediate8create32Ej'/>
<use f='WebKit/JavaScriptCore/PrivateHeaders/JavaScriptCore/AssemblerCommon.h' l='127' u='c' c='_ZN3JSC21ARM64LogicalImmediate8create32Ej'/>
<use f='WebKit/JavaScriptCore/PrivateHeaders/JavaScriptCore/AssemblerCommon.h' l='142' u='c' c='_ZN3JSC21ARM64LogicalImmediate8create64Em'/>
<def f='WebKit/JavaScriptCore/PrivateHeaders/JavaScriptCore/AssemblerCommon.h' l='221' ll='254' type='static bool JSC::ARM64LogicalImmediate::findBitRange(uint64_t value, unsigned int &amp; hsb, unsigned int &amp; lsb, bool &amp; inverted)'/>
<use f='WebKit/Source/JavaScriptCore/assembler/AssemblerCommon.h' l='99' u='c' c='_ZN3JSC21ARM64LogicalImmediate8create32Ej'/>
<use f='WebKit/Source/JavaScriptCore/assembler/AssemblerCommon.h' l='106' u='c' c='_ZN3JSC21ARM64LogicalImmediate8create32Ej'/>
<use f='WebKit/Source/JavaScriptCore/assembler/AssemblerCommon.h' l='113' u='c' c='_ZN3JSC21ARM64LogicalImmediate8create32Ej'/>
<use f='WebKit/Source/JavaScriptCore/assembler/AssemblerCommon.h' l='120' u='c' c='_ZN3JSC21ARM64LogicalImmediate8create32Ej'/>
<use f='WebKit/Source/JavaScriptCore/assembler/AssemblerCommon.h' l='127' u='c' c='_ZN3JSC21ARM64LogicalImmediate8create32Ej'/>
<use f='WebKit/Source/JavaScriptCore/assembler/AssemblerCommon.h' l='142' u='c' c='_ZN3JSC21ARM64LogicalImmediate8create64Em'/>
<def f='WebKit/Source/JavaScriptCore/assembler/AssemblerCommon.h' l='221' ll='254' type='static bool JSC::ARM64LogicalImmediate::findBitRange(uint64_t value, unsigned int &amp; hsb, unsigned int &amp; lsb, bool &amp; inverted)'/>
