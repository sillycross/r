<def f='WebKit/Source/WebCore/rendering/RenderFlexibleBox.cpp' l='170' ll='208'/>
<use f='WebKit/Source/WebCore/rendering/RenderFlexibleBox.cpp' l='220' c='_ZNK7WebCore17RenderFlexibleBox34computeChildIntrinsicLogicalWidthsERNS_12RenderObjectERNS_10LayoutUnitES4_'/>
<use f='WebKit/Source/WebCore/rendering/RenderFlexibleBox.cpp' l='225' c='_ZNK7WebCore17RenderFlexibleBox34computeChildIntrinsicLogicalWidthsERNS_12RenderObjectERNS_10LayoutUnitES4_'/>
<use f='WebKit/Source/WebCore/rendering/RenderFlexibleBox.cpp' l='573' c='_ZN7WebCore17RenderFlexibleBox26childIntrinsicLogicalWidthERNS_9RenderBoxE'/>
<size>32</size>
<doc f='WebKit/Source/WebCore/rendering/RenderFlexibleBox.cpp' l='164'>// RAII class which defines a scope in which overriding sizes of a box are either:
//   1) replaced by other size in one axis if size is specified
//   2) cleared in both axis if size == std::nullopt
//
// In any case the previous overriding sizes are restored on destruction (in case of
// not having a previous value it&apos;s simply cleared).</doc>
<fun r='_ZN7WebCore20OverridingSizesScopeC1ERNS_9RenderBoxENS0_4AxisESt8optionalINS_10LayoutUnitEE'/>
<fun r='_ZN7WebCore20OverridingSizesScopeD1Ev'/>
<mbr r='WebCore::OverridingSizesScope::m_box' o='0' t='WebCore::RenderBox &amp;'/>
<mbr r='WebCore::OverridingSizesScope::m_axis' o='64' t='WebCore::OverridingSizesScope::Axis'/>
<mbr r='WebCore::OverridingSizesScope::m_overridingWidth' o='96' t='std::optional&lt;LayoutUnit&gt;'/>
<mbr r='WebCore::OverridingSizesScope::m_overridingHeight' o='160' t='std::optional&lt;LayoutUnit&gt;'/>
