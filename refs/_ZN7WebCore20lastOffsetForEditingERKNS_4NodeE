<dec f='WebKit/Source/WebCore/editing/Editing.h' l='71' type='int WebCore::lastOffsetForEditing(const WebCore::Node &amp; )'/>
<use f='WebKit/Source/WebCore/dom/Position.cpp' l='235' u='c' c='_ZNK7WebCore8Position28offsetForPositionAfterAnchorEv'/>
<use f='WebKit/Source/WebCore/dom/Position.cpp' l='411' u='c' c='_ZNK7WebCore8Position4nextENS_16PositionMoveTypeE'/>
<use f='WebKit/Source/WebCore/dom/Position.cpp' l='466' u='c' c='_ZNK7WebCore8Position29atFirstEditingPositionForNodeEv'/>
<use f='WebKit/Source/WebCore/dom/Position.cpp' l='477' u='c' c='_ZNK7WebCore8Position28atLastEditingPositionForNodeEv'/>
<use f='WebKit/Source/WebCore/dom/Position.cpp' l='537' u='c' c='_ZNK7WebCore8Position13atStartOfTreeEv'/>
<use f='WebKit/Source/WebCore/dom/Position.cpp' l='554' u='c' c='_ZNK7WebCore8Position11atEndOfTreeEv'/>
<use f='WebKit/Source/WebCore/dom/Position.cpp' l='560' u='c' c='_ZNK7WebCore8Position11atEndOfTreeEv'/>
<use f='WebKit/Source/WebCore/dom/PositionIterator.cpp' l='69' u='c' c='_ZN7WebCore16PositionIterator9incrementEv'/>
<use f='WebKit/Source/WebCore/dom/PositionIterator.cpp' l='88' u='c' c='_ZN7WebCore16PositionIterator9decrementEv'/>
<use f='WebKit/Source/WebCore/dom/PositionIterator.cpp' l='99' u='c' c='_ZN7WebCore16PositionIterator9decrementEv'/>
<use f='WebKit/Source/WebCore/dom/PositionIterator.cpp' l='125' u='c' c='_ZNK7WebCore16PositionIterator5atEndEv'/>
<use f='WebKit/Source/WebCore/dom/PositionIterator.cpp' l='143' u='c' c='_ZNK7WebCore16PositionIterator11atEndOfNodeEv'/>
<use f='WebKit/Source/WebCore/editing/DeleteSelectionCommand.cpp' l='639' u='c' c='_ZN7WebCore22DeleteSelectionCommand19handleGeneralDeleteEv'/>
<def f='WebKit/Source/WebCore/editing/Editing.cpp' l='342' ll='349' type='int WebCore::lastOffsetForEditing(const WebCore::Node &amp; node)'/>
<use f='WebKit/Source/WebCore/editing/Editing.cpp' l='910' u='c' c='_ZN7WebCore14caretMaxOffsetERKNS_4NodeE'/>
<doc f='WebKit/Source/WebCore/editing/Editing.cpp' l='338'>// This method is used to create positions in the DOM. It returns the maximum valid offset
// in a node. It returns 1 for some elements even though they do not have children, which
// creates technically invalid DOM Positions. Be sure to call parentAnchoredEquivalent
// on a Position before using it to create a DOM Range, or an exception will be thrown.</doc>
