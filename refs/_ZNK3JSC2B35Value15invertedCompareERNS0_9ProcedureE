<dec f='WebKit/Source/JavaScriptCore/b3/B3Value.h' l='255' type='JSC::B3::Value * JSC::B3::Value::invertedCompare(JSC::B3::Procedure &amp; ) const'/>
<doc f='WebKit/Source/JavaScriptCore/b3/B3Value.h' l='251'>// If the value is a comparison then this returns the inverted form of that comparison, if
    // possible. It can be impossible for double comparisons, where for example LessThan and
    // GreaterEqual behave differently. If this returns a value, it is a new value, which must be
    // either inserted into some block or deleted.</doc>
<use f='WebKit/Source/JavaScriptCore/b3/B3ReduceStrength.cpp' l='1349' u='c' c='_ZN3JSC2B312_GLOBAL__N_114ReduceStrength19reduceValueStrengthEv'/>
<def f='WebKit/Source/JavaScriptCore/b3/B3Value.cpp' l='432' ll='441' type='JSC::B3::Value * JSC::B3::Value::invertedCompare(JSC::B3::Procedure &amp; proc) const'/>
