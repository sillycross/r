<inh f='WebKit/Source/ThirdParty/ANGLE/src/common/angleutils.h' l='43' c='angle::NonCopyable'/>
<def f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/Texture.h' l='104' ll='241'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/Texture.h' l='179' c='_ZN2gleqERKNS_12TextureStateES2_'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/Texture.h' l='179' c='_ZN2gleqERKNS_12TextureStateES2_'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/Texture.h' l='243' c='_ZN2gleqERKNS_12TextureStateES2_'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/Texture.h' l='243' c='_ZN2gleqERKNS_12TextureStateES2_'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/Texture.h' l='244' c='_ZN2glneERKNS_12TextureStateES2_'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/Texture.h' l='244' c='_ZN2glneERKNS_12TextureStateES2_'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/Texture.h' l='327' c='_ZNK2gl7Texture8getStateEv'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/Texture.h' l='339' c='_ZNK2gl7Texture15getTextureStateEv'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/Texture.h' l='636'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/Texture.h' l='672' c='_ZN2gleqERKNS_12TextureStateES2_'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/Texture.h' l='672' c='_ZN2gleqERKNS_12TextureStateES2_'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/Texture.h' l='680' c='_ZN2glneERKNS_12TextureStateES2_'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/Texture.h' l='680' c='_ZN2glneERKNS_12TextureStateES2_'/>
<size>216</size>
<doc f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/Texture.h' l='103'>// State from Table 6.9 (state per texture object) in the OpenGL ES 3.0.2 spec.</doc>
<fun r='_ZN2gl12TextureStateC1ENS_11TextureTypeE'/>
<fun r='_ZN2gl12TextureStateD1Ev'/>
<fun r='_ZNK2gl12TextureState15swizzleRequiredEv'/>
<fun r='_ZNK2gl12TextureState21getEffectiveBaseLevelEv'/>
<fun r='_ZNK2gl12TextureState20getEffectiveMaxLevelEv'/>
<fun r='_ZNK2gl12TextureState17getMipmapMaxLevelEv'/>
<fun r='_ZN2gl12TextureState12setBaseLevelEj'/>
<fun r='_ZNK2gl12TextureState12getBaseLevelEv'/>
<fun r='_ZN2gl12TextureState11setMaxLevelEj'/>
<fun r='_ZNK2gl12TextureState11getMaxLevelEv'/>
<fun r='_ZNK2gl12TextureState14isCubeCompleteEv'/>
<fun r='_ZNK2gl12TextureState27compatibleWithSamplerFormatENS_13SamplerFormatERKNS_12SamplerStateE'/>
<fun r='_ZNK2gl12TextureState12getImageDescENS_13TextureTargetEm'/>
<fun r='_ZNK2gl12TextureState12getImageDescERKNS_10ImageIndexE'/>
<fun r='_ZNK2gl12TextureState7getTypeEv'/>
<fun r='_ZNK2gl12TextureState15getSwizzleStateEv'/>
<fun r='_ZNK2gl12TextureState15getSamplerStateEv'/>
<fun r='_ZNK2gl12TextureState8getUsageEv'/>
<fun r='_ZNK2gl12TextureState26getDepthStencilTextureModeEv'/>
<fun r='_ZNK2gl12TextureState13isStencilModeEv'/>
<fun r='_ZNK2gl12TextureState19hasBeenBoundAsImageEv'/>
<fun r='_ZNK2gl12TextureState15getSRGBOverrideEv'/>
<fun r='_ZNK2gl12TextureState16getBaseLevelDescEv'/>
<fun r='_ZN2gl12TextureState7setCropERKNS_9RectangleE'/>
<fun r='_ZNK2gl12TextureState7getCropEv'/>
<fun r='_ZN2gl12TextureState21setGenerateMipmapHintEj'/>
<fun r='_ZNK2gl12TextureState21getGenerateMipmapHintEv'/>
<fun r='_ZNK2gl12TextureState20getEnabledLevelCountEv'/>
<fun r='_ZNK2gl12TextureState18getImmutableFormatEv'/>
<fun r='_ZNK2gl12TextureState18getImmutableLevelsEv'/>
<fun r='_ZNK2gl12TextureState13getImageDescsEv'/>
<fun r='_ZNK2gl12TextureState12getInitStateEv'/>
<fun r='_ZNK2gl12TextureState26computeSamplerCompletenessERKNS_12SamplerStateERKNS_5StateE'/>
<fun r='_ZNK2gl12TextureState25computeMipmapCompletenessEv'/>
<fun r='_ZNK2gl12TextureState24computeLevelCompletenessENS_13TextureTargetEm'/>
<fun r='_ZNK2gl12TextureState28computeRequiredSamplerFormatERKNS_12SamplerStateE'/>
<fun r='_ZNK2gl12TextureState18getBaseImageTargetEv'/>
<fun r='_ZN2gl12TextureState12setImageDescENS_13TextureTargetEmRKNS_9ImageDescE'/>
<fun r='_ZN2gl12TextureState17setImageDescChainEjjNS_7ExtentsERKNS_6FormatENS_9InitStateE'/>
<fun r='_ZN2gl12TextureState28setImageDescChainMultisampleENS_7ExtentsERKNS_6FormatEibNS_9InitStateE'/>
<fun r='_ZN2gl12TextureState14clearImageDescENS_13TextureTargetEm'/>
<fun r='_ZN2gl12TextureState15clearImageDescsEv'/>
<mbr r='gl::TextureState::mType' o='0' t='const gl::TextureType'/>
<mbr r='gl::TextureState::mSwizzleState' o='32' t='gl::SwizzleState'/>
<mbr r='gl::TextureState::mSamplerState' o='160' t='gl::SamplerState'/>
<mbr r='gl::TextureState::mSrgbOverride' o='704' t='gl::SrgbOverride'/>
<mbr r='gl::TextureState::mBaseLevel' o='736' t='GLuint'/>
<mbr r='gl::TextureState::mMaxLevel' o='768' t='GLuint'/>
<mbr r='gl::TextureState::mDepthStencilTextureMode' o='800' t='GLenum'/>
<mbr r='gl::TextureState::mHasBeenBoundAsImage' o='832' t='bool'/>
<mbr r='gl::TextureState::mImmutableFormat' o='840' t='bool'/>
<mbr r='gl::TextureState::mImmutableLevels' o='864' t='GLuint'/>
<mbr r='gl::TextureState::mUsage' o='896' t='GLenum'/>
<mbr r='gl::TextureState::mImageDescs' o='960' t='std::vector&lt;ImageDesc&gt;'/>
<mbr r='gl::TextureState::mCropRect' o='1152' t='gl::Rectangle'/>
<mbr r='gl::TextureState::mGenerateMipmapHint' o='1280' t='GLenum'/>
<mbr r='gl::TextureState::mBuffer' o='1344' t='OffsetBindingPointer&lt;gl::Buffer&gt;'/>
<mbr r='gl::TextureState::mInitState' o='1600' t='gl::InitState'/>
<mbr r='gl::TextureState::mCachedSamplerFormat' o='1632' t='gl::SamplerFormat'/>
<mbr r='gl::TextureState::mCachedSamplerCompareMode' o='1664' t='GLenum'/>
<mbr r='gl::TextureState::mCachedSamplerFormatValid' o='1696' t='bool'/>
