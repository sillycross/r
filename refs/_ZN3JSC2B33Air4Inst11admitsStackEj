<dec f='WebKit/Source/JavaScriptCore/b3/air/AirInst.h' l='169' type='bool JSC::B3::Air::Inst::admitsStack(unsigned int argIndex)'/>
<doc f='WebKit/Source/JavaScriptCore/b3/air/AirInst.h' l='162'>// Assuming this instruction is in a valid form right now, will it still be in one of the valid
    // forms if we put an Addr referencing the stack (or a StackSlot or CallArg, of course) in the
    // given index? Spilling uses this: it walks the args by index to find Tmps that need spilling;
    // if it finds one, it calls this to see if it can replace the Arg::Tmp with an Arg::Addr. If it
    // finds a non-Tmp Arg, then it calls that Arg&apos;s forEachTmp to do a replacement that way.
    //
    // This function is auto-generated by opcode_generator.rb.</doc>
<use f='WebKit/Source/JavaScriptCore/b3/air/AirInstInlines.h' l='111' u='c' c='_ZN3JSC2B33Air4Inst11admitsStackERNS1_3ArgE'/>
<use f='WebKit/Source/JavaScriptCore/b3/air/AirAllocateRegistersAndStackByLinearScan.cpp' l='567' u='c' c='_ZN3JSC2B33Air12_GLOBAL__N_110LinearScan13emitSpillCodeEv'/>
<def f='WebKit/JavaScriptCore/DerivedSources/AirOpcodeGenerated.h' l='22431' ll='31838' type='bool JSC::B3::Air::Inst::admitsStack(unsigned int argIndex)'/>
<use f='WebKit/Source/JavaScriptCore/b3/B3CheckSpecial.cpp' l='142' u='c' c='_ZN3JSC2B312CheckSpecial11admitsStackERNS0_3Air4InstEj'/>
