<inh f='WebKit/Source/ThirdParty/ANGLE/src/compiler/translator/blocklayout.h' l='73' c='sh::BlockLayoutEncoder'/>
<def f='WebKit/Source/ThirdParty/ANGLE/src/compiler/translator/blocklayout.h' l='140' ll='162'/>
<ovr f='WebKit/Source/ThirdParty/ANGLE/src/compiler/translator/blocklayout.h' l='164' c='sh::Std430BlockEncoder'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/compiler/translator/blocklayout.h' l='164'/>
<size>16</size>
<doc f='WebKit/Source/ThirdParty/ANGLE/src/compiler/translator/blocklayout.h' l='137'>// Block layout according to the std140 block layout
// See &quot;Standard Uniform Block Layout&quot; in Section 2.11.6 of the OpenGL ES 3.0 specification</doc>
<fun r='_ZN2sh18Std140BlockEncoderC1Ev'/>
<fun r='_ZN2sh18Std140BlockEncoder18enterAggregateTypeERKNS_14ShaderVariableE'/>
<fun r='_ZN2sh18Std140BlockEncoder17exitAggregateTypeERKNS_14ShaderVariableE'/>
<fun r='_ZN2sh18Std140BlockEncoder18getBlockLayoutInfoEjRKSt6vectorIjSaIjEEbPiS6_'/>
<fun r='_ZN2sh18Std140BlockEncoder13advanceOffsetEjRKSt6vectorIjSaIjEEbii'/>
<fun r='_ZNK2sh18Std140BlockEncoder16getBaseAlignmentERKNS_14ShaderVariableE'/>
<fun r='_ZNK2sh18Std140BlockEncoder20getTypeBaseAlignmentEjb'/>
<fun r='_ZN2sh18Std140BlockEncoderC1Ev'/>
<fun r='_ZN2sh18Std140BlockEncoder18enterAggregateTypeERKNS_14ShaderVariableE'/>
<fun r='_ZN2sh18Std140BlockEncoder17exitAggregateTypeERKNS_14ShaderVariableE'/>
<fun r='_ZN2sh18Std140BlockEncoder18getBlockLayoutInfoEjRKSt6vectorIjSaIjEEbPiS6_'/>
<fun r='_ZN2sh18Std140BlockEncoder13advanceOffsetEjRKSt6vectorIjSaIjEEbii'/>
<fun r='_ZNK2sh18Std140BlockEncoder16getBaseAlignmentERKNS_14ShaderVariableE'/>
<fun r='_ZNK2sh18Std140BlockEncoder20getTypeBaseAlignmentEjb'/>
