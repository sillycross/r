<def f='WebKit/Source/JavaScriptCore/tools/CompilerTimingScope.h' l='38' ll='48'/>
<use f='WebKit/Source/JavaScriptCore/tools/CompilerTimingScope.h' l='39' c='_ZN3JSC19CompilerTimingScopeC1ERKS0_'/>
<use f='WebKit/Source/JavaScriptCore/tools/CompilerTimingScope.h' l='39' c='_ZN3JSC19CompilerTimingScopeaSERKS0_'/>
<use f='WebKit/Source/JavaScriptCore/tools/CompilerTimingScope.h' l='39' c='_ZN3JSC19CompilerTimingScopeaSERKS0_'/>
<size>24</size>
<doc f='WebKit/Source/JavaScriptCore/tools/CompilerTimingScope.h' l='33'>// FIXME: We should find some way of reconciling the differences between WTF::TimingScope and this class. The differences
// are:
// - CompilerTimingScope knows to only do work when --logPhaseTimes=true, while TimingScope is unconditional.
// - CompilerTimingScope reports totals on every run, while TimingScope reports averages periodically.</doc>
<fun r='_ZN3JSC19CompilerTimingScopeC1ERKS0_'/>
<fun r='_ZN3JSC19CompilerTimingScopeC1EPKcS2_'/>
<fun r='_ZN3JSC19CompilerTimingScopeD1Ev'/>
<mbr r='JSC::CompilerTimingScope::m_compilerName' o='0' t='const char *'/>
<mbr r='JSC::CompilerTimingScope::m_name' o='64' t='const char *'/>
<mbr r='JSC::CompilerTimingScope::m_before' o='128' t='WTF::MonotonicTime'/>
<fun r='_ZN3JSC19CompilerTimingScopeC1EPKcS2_'/>
<fun r='_ZN3JSC19CompilerTimingScopeD1Ev'/>
<ovr f='WebKit/Source/JavaScriptCore/b3/B3TimingScope.h' l='34' c='JSC::B3::TimingScope'/>
<use f='WebKit/Source/JavaScriptCore/b3/B3TimingScope.h' l='34'/>
<use f='WebKit/Source/JavaScriptCore/b3/B3TimingScope.h' l='37' c='_ZN3JSC2B311TimingScopeC1EPKc'/>
<size>24</size>
<use f='WebKit/Source/JavaScriptCore/dfg/DFGPhase.h' l='82' c='_ZN3JSC3DFG9runAndLogERT_'/>
<size>24</size>
<use f='WebKit/Source/JavaScriptCore/dfg/DFGPlan.cpp' l='185' c='_ZN3JSC3DFG4Plan19compileInThreadImplEv'/>
<use f='WebKit/Source/JavaScriptCore/dfg/DFGPlan.cpp' l='198' c='_ZN3JSC3DFG4Plan19compileInThreadImplEv'/>
<use f='WebKit/Source/JavaScriptCore/dfg/DFGPlan.cpp' l='339' c='_ZN3JSC3DFG4Plan19compileInThreadImplEv'/>
<size>24</size>
