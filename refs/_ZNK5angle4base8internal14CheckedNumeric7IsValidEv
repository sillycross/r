<def f='WebKit/Source/ThirdParty/ANGLE/src/common/third_party/base/anglebase/numerics/safe_math.h' l='90' type='bool angle::base::internal::CheckedNumeric::IsValid() const'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/common/third_party/base/anglebase/numerics/safe_math.h' l='97' u='c' c='_ZNK5angle4base8internal14CheckedNumeric13AssignIfValidEPT_'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/common/third_party/base/anglebase/numerics/safe_math.h' l='104' u='c' c='_ZNK5angle4base8internal14CheckedNumeric10ValueOrDieEv'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/common/third_party/base/anglebase/numerics/safe_math.h' l='111' u='c' c='_ZNK5angle4base8internal14CheckedNumeric14ValueOrDefaultET_'/>
<doc f='WebKit/Source/ThirdParty/ANGLE/src/common/third_party/base/anglebase/numerics/safe_math.h' l='89'>// IsValid() is the public API to test if a CheckedNumeric is currently valid.</doc>
<use f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/BinaryStream.h' l='114' u='c' c='_ZN2gl17BinaryInputStream10readStringEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/BinaryStream.h' l='129' u='c' c='_ZN2gl17BinaryInputStream4skipEm'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/BinaryStream.h' l='164' u='c' c='_ZN2gl17BinaryInputStream4readEPT_m'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/libANGLE/BinaryStream.h' l='173' u='c' c='_ZN2gl17BinaryInputStream4readEPT_m'/>
