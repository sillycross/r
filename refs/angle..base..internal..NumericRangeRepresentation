<def f='WebKit/Source/ThirdParty/ANGLE/src/common/third_party/base/anglebase/numerics/safe_conversions_impl.h' l='46' ll='50'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/common/third_party/base/anglebase/numerics/safe_conversions_impl.h' l='70'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/common/third_party/base/anglebase/numerics/safe_conversions_impl.h' l='83'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/common/third_party/base/anglebase/numerics/safe_conversions_impl.h' l='95'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/common/third_party/base/anglebase/numerics/safe_conversions_impl.h' l='181'/>
<doc f='WebKit/Source/ThirdParty/ANGLE/src/common/third_party/base/anglebase/numerics/safe_conversions_impl.h' l='41'>// A range for a given nunmeric Src type is contained for a given numeric Dst
// type if both numeric_limits&lt;Src&gt;::max() &lt;= numeric_limits&lt;Dst&gt;::max() and
// numeric_limits&lt;Src&gt;::min() &gt;= numeric_limits&lt;Dst&gt;::min() are true.
// We implement this as template specializations rather than simple static
// comparisons to ensure type correctness in our comparisons.</doc>
