<inh f='WebKit/Source/WebCore/Modules/geolocation/GeolocationClient.h' l='37' c='WebCore::GeolocationClient'/>
<def f='WebKit/Source/WebCore/platform/mock/GeolocationClientMock.h' l='47' ll='93'/>
<size>264</size>
<doc f='WebKit/Source/WebCore/platform/mock/GeolocationClientMock.h' l='45'>// FIXME: this should not be in WebCore. It should be moved to WebKit.
// Provides a mock object for the geolocation client.</doc>
<fun r='_ZN7WebCore21GeolocationClientMockC1Ev'/>
<fun r='_ZN7WebCore21GeolocationClientMockD1Ev'/>
<fun r='_ZN7WebCore21GeolocationClientMock5resetEv'/>
<fun r='_ZN7WebCore21GeolocationClientMock13setControllerEPNS_21GeolocationControllerE'/>
<fun r='_ZN7WebCore21GeolocationClientMock11setPositionEONS_23GeolocationPositionDataE'/>
<fun r='_ZN7WebCore21GeolocationClientMock27setPositionUnavailableErrorERKN3WTF6StringE'/>
<fun r='_ZN7WebCore21GeolocationClientMock13setPermissionEb'/>
<fun r='_ZNK7WebCore21GeolocationClientMock33numberOfPendingPermissionRequestsEv'/>
<fun r='_ZN7WebCore21GeolocationClientMock20geolocationDestroyedEv'/>
<fun r='_ZN7WebCore21GeolocationClientMock13startUpdatingERKN3WTF6StringE'/>
<fun r='_ZN7WebCore21GeolocationClientMock12stopUpdatingEv'/>
<fun r='_ZN7WebCore21GeolocationClientMock21setEnableHighAccuracyEb'/>
<fun r='_ZN7WebCore21GeolocationClientMock12lastPositionEv'/>
<fun r='_ZN7WebCore21GeolocationClientMock17requestPermissionERNS_11GeolocationE'/>
<fun r='_ZN7WebCore21GeolocationClientMock23cancelPermissionRequestERNS_11GeolocationE'/>
<fun r='_ZN7WebCore21GeolocationClientMock21asyncUpdateControllerEv'/>
<fun r='_ZN7WebCore21GeolocationClientMock20controllerTimerFiredEv'/>
<fun r='_ZN7WebCore21GeolocationClientMock21asyncUpdatePermissionEv'/>
<fun r='_ZN7WebCore21GeolocationClientMock20permissionTimerFiredEv'/>
<fun r='_ZN7WebCore21GeolocationClientMock10clearErrorEv'/>
<mbr r='WebCore::GeolocationClientMock::m_controller' o='64' t='WebCore::GeolocationController *'/>
<mbr r='WebCore::GeolocationClientMock::m_lastPosition' o='128' t='std::optional&lt;GeolocationPositionData&gt;'/>
<mbr r='WebCore::GeolocationClientMock::m_hasError' o='1088' t='bool'/>
<mbr r='WebCore::GeolocationClientMock::m_errorMessage' o='1152' t='WTF::String'/>
<mbr r='WebCore::GeolocationClientMock::m_controllerTimer' o='1216' t='WebCore::Timer'/>
<mbr r='WebCore::GeolocationClientMock::m_permissionTimer' o='1600' t='WebCore::Timer'/>
<mbr r='WebCore::GeolocationClientMock::m_isActive' o='1984' t='bool'/>
<mbr r='WebCore::GeolocationClientMock::m_permissionState' o='2016' t='enum PermissionState'/>
<mbr r='WebCore::GeolocationClientMock::m_pendingPermission' o='2048' t='WebCore::GeolocationClientMock::GeolocationSet'/>
<fun r='_ZN7WebCore21GeolocationClientMockC1Ev'/>
<fun r='_ZN7WebCore21GeolocationClientMockD1Ev'/>
<fun r='_ZN7WebCore21GeolocationClientMock13setControllerEPNS_21GeolocationControllerE'/>
<fun r='_ZN7WebCore21GeolocationClientMock11setPositionEONS_23GeolocationPositionDataE'/>
<fun r='_ZN7WebCore21GeolocationClientMock27setPositionUnavailableErrorERKN3WTF6StringE'/>
<fun r='_ZN7WebCore21GeolocationClientMock13setPermissionEb'/>
<fun r='_ZNK7WebCore21GeolocationClientMock33numberOfPendingPermissionRequestsEv'/>
<fun r='_ZN7WebCore21GeolocationClientMock17requestPermissionERNS_11GeolocationE'/>
<fun r='_ZN7WebCore21GeolocationClientMock23cancelPermissionRequestERNS_11GeolocationE'/>
<fun r='_ZN7WebCore21GeolocationClientMock21asyncUpdatePermissionEv'/>
<fun r='_ZN7WebCore21GeolocationClientMock20permissionTimerFiredEv'/>
<fun r='_ZN7WebCore21GeolocationClientMock5resetEv'/>
<fun r='_ZN7WebCore21GeolocationClientMock20geolocationDestroyedEv'/>
<fun r='_ZN7WebCore21GeolocationClientMock13startUpdatingERKN3WTF6StringE'/>
<fun r='_ZN7WebCore21GeolocationClientMock12stopUpdatingEv'/>
<fun r='_ZN7WebCore21GeolocationClientMock21setEnableHighAccuracyEb'/>
<fun r='_ZN7WebCore21GeolocationClientMock12lastPositionEv'/>
<fun r='_ZN7WebCore21GeolocationClientMock21asyncUpdateControllerEv'/>
<fun r='_ZN7WebCore21GeolocationClientMock20controllerTimerFiredEv'/>
<fun r='_ZN7WebCore21GeolocationClientMock10clearErrorEv'/>
