<def f='WebKit/JavaScriptCore/PrivateHeaders/JavaScriptCore/MacroAssemblerX86Common.h' l='2770' ll='2774' type='JSC::AbstractMacroAssembler&lt;JSC::X86Assembler&gt;::Jump JSC::MacroAssemblerX86Common::branchAdd32(JSC::MacroAssemblerX86Common::ResultCondition cond, JSC::AbstractMacroAssembler&lt;JSC::X86Assembler&gt;::RegisterID src, JSC::AbstractMacroAssembler&lt;JSC::X86Assembler&gt;::RegisterID dest)'/>
<use f='WebKit/JavaScriptCore/PrivateHeaders/JavaScriptCore/MacroAssemblerX86Common.h' l='2803' u='c' c='_ZN3JSC23MacroAssemblerX86Common11branchAdd32ENS0_15ResultConditionENS_12X86Registers10RegisterIDES3_S3_'/>
<use f='WebKit/JavaScriptCore/PrivateHeaders/JavaScriptCore/MacroAssemblerX86Common.h' l='2805' u='c' c='_ZN3JSC23MacroAssemblerX86Common11branchAdd32ENS0_15ResultConditionENS_12X86Registers10RegisterIDES3_S3_'/>
<use f='WebKit/JavaScriptCore/PrivateHeaders/JavaScriptCore/MacroAssemblerX86Common.h' l='2814' u='c' c='_ZN3JSC23MacroAssemblerX86Common11branchAdd32ENS0_15ResultConditionENS_22AbstractMacroAssemblerINS_12X86AssemblerEE7AddressENS_12X86Registers10RegisterIDES7_'/>
<use f='WebKit/JavaScriptCore/PrivateHeaders/JavaScriptCore/MacroAssembler.h' l='1846' u='c' c='_ZN3JSC14MacroAssembler11branchAdd32ENS_23MacroAssemblerX86Common15ResultConditionENS_12X86Registers10RegisterIDENS_22AbstractMacroAssemblerINS_12X86AssemblerEE5Imm32ES4_'/>
<doc f='WebKit/JavaScriptCore/PrivateHeaders/JavaScriptCore/MacroAssemblerX86Common.h' l='2760'>// Arithmetic control flow operations:
    //
    // This set of conditional branch operations branch based
    // on the result of an arithmetic operation.  The operation
    // is performed as normal, storing the result.
    //
    // * jz operations branch if the result is zero.
    // * jo operations branch if the (signed) arithmetic
    //   operation caused an overflow to occur.</doc>
<def f='WebKit/Source/JavaScriptCore/assembler/MacroAssemblerX86Common.h' l='2770' ll='2774' type='JSC::AbstractMacroAssembler&lt;JSC::X86Assembler&gt;::Jump JSC::MacroAssemblerX86Common::branchAdd32(JSC::MacroAssemblerX86Common::ResultCondition cond, JSC::AbstractMacroAssembler&lt;JSC::X86Assembler&gt;::RegisterID src, JSC::AbstractMacroAssembler&lt;JSC::X86Assembler&gt;::RegisterID dest)'/>
<use f='WebKit/Source/JavaScriptCore/assembler/MacroAssemblerX86Common.h' l='2803' u='c' c='_ZN3JSC23MacroAssemblerX86Common11branchAdd32ENS0_15ResultConditionENS_12X86Registers10RegisterIDES3_S3_'/>
<use f='WebKit/Source/JavaScriptCore/assembler/MacroAssemblerX86Common.h' l='2805' u='c' c='_ZN3JSC23MacroAssemblerX86Common11branchAdd32ENS0_15ResultConditionENS_12X86Registers10RegisterIDES3_S3_'/>
<use f='WebKit/Source/JavaScriptCore/assembler/MacroAssemblerX86Common.h' l='2814' u='c' c='_ZN3JSC23MacroAssemblerX86Common11branchAdd32ENS0_15ResultConditionENS_22AbstractMacroAssemblerINS_12X86AssemblerEE7AddressENS_12X86Registers10RegisterIDES7_'/>
<use f='WebKit/Source/JavaScriptCore/assembler/MacroAssembler.h' l='1846' u='c' c='_ZN3JSC14MacroAssembler11branchAdd32ENS_23MacroAssemblerX86Common15ResultConditionENS_12X86Registers10RegisterIDENS_22AbstractMacroAssemblerINS_12X86AssemblerEE5Imm32ES4_'/>
<doc f='WebKit/Source/JavaScriptCore/assembler/MacroAssemblerX86Common.h' l='2760'>// Arithmetic control flow operations:
    //
    // This set of conditional branch operations branch based
    // on the result of an arithmetic operation.  The operation
    // is performed as normal, storing the result.
    //
    // * jz operations branch if the result is zero.
    // * jo operations branch if the (signed) arithmetic
    //   operation caused an overflow to occur.</doc>
<use f='WebKit/JavaScriptCore/DerivedSources/AirOpcodeGenerated.h' l='38760' u='c' c='_ZN3JSC2B33Air4Inst8generateERNS_12CCallHelpersERNS1_17GenerationContextE'/>
<use f='WebKit/Source/JavaScriptCore/dfg/DFGSpeculativeJIT.cpp' l='9460' u='c' c='_ZN3JSC3DFG14SpeculativeJIT22emitPopulateSliceIndexERNS0_4EdgeESt8optionalINS_12X86Registers10RegisterIDEES6_S6_'/>
<use f='WebKit/Source/JavaScriptCore/dfg/DFGSpeculativeJIT.cpp' l='15507' u='c' c='_ZN3JSC3DFG14SpeculativeJIT15compileMakeRopeEPNS0_4NodeE'/>
