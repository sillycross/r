<def f='WebKit/Source/ThirdParty/ANGLE/src/common/third_party/base/anglebase/numerics/safe_math_impl.h' l='220' ll='228' type='typename std::enable_if&lt;std::numeric_limits&lt;T&gt;::is_integer &amp;&amp; sizeof(T) * 2 &lt;= sizeof(uintmax_t), T&gt;::type angle::base::internal::CheckedMul(T x, T y, angle::base::internal::RangeConstraint * validity)'/>
<def f='WebKit/Source/ThirdParty/ANGLE/src/common/third_party/base/anglebase/numerics/safe_math_impl.h' l='231' ll='258' type='typename std::enable_if&lt;std::numeric_limits&lt;T&gt;::is_integer &amp;&amp; std::numeric_limits&lt;T&gt;::is_signed &amp;&amp; (sizeof(T) * 2 &gt; sizeof(uintmax_t)), T&gt;::type angle::base::internal::CheckedMul(T x, T y, angle::base::internal::RangeConstraint * validity)'/>
<def f='WebKit/Source/ThirdParty/ANGLE/src/common/third_party/base/anglebase/numerics/safe_math_impl.h' l='261' ll='268' type='typename std::enable_if&lt;std::numeric_limits&lt;T&gt;::is_integer &amp;&amp; !std::numeric_limits&lt;T&gt;::is_signed &amp;&amp; (sizeof(T) * 2 &gt; sizeof(uintmax_t)), T&gt;::type angle::base::internal::CheckedMul(T x, T y, angle::base::internal::RangeConstraint * validity)'/>
<def f='WebKit/Source/ThirdParty/ANGLE/src/common/third_party/base/anglebase/numerics/safe_math_impl.h' l='378' macro='1' type='typename std::enable_if&lt;std::numeric_limits&lt;T&gt;::is_iec559, T&gt;::type angle::base::internal::CheckedMul(T , T , angle::base::internal::RangeConstraint * )'/>
