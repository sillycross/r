<def f='WebKit/Source/ThirdParty/ANGLE/include/GLSLANG/ShaderLang.h' l='114' type='const ShCompileOptions'/>
<doc f='WebKit/Source/ThirdParty/ANGLE/include/GLSLANG/ShaderLang.h' l='102'>// Due to spec difference between GLSL 4.1 or lower and ESSL3, some platforms (for example, Mac OSX
// core profile) require a variable&apos;s &quot;invariant&quot;/&quot;centroid&quot; qualifiers to match between vertex and
// fragment shader. A simple solution to allow such shaders to link is to omit the two qualifiers.
// AMD driver in Linux requires invariant qualifier to match between vertex and fragment shaders,
// while ESSL3 disallows invariant qualifier in fragment shader and GLSL &gt;= 4.2 doesn&apos;t require
// invariant qualifier to match between shaders. Remove invariant qualifier from vertex shader to
// workaround AMD driver bug.
// Note that the two flags take effect on ESSL3 input shaders translated to GLSL 4.1 or lower and to
// GLSL 4.2 or newer on Linux AMD.
// TODO(zmo): This is not a good long-term solution. Simply dropping these qualifiers may break some
// developers&apos; content. A more complex workaround of dynamically generating, compiling, and
// re-linking shaders that use these qualifiers should be implemented.</doc>
<use f='WebKit/Source/ThirdParty/ANGLE/src/compiler/translator/Compiler.cpp' l='129' u='r' c='_ZN2sh15RemoveInvariantEji14ShShaderOutputm'/>
<use f='WebKit/Source/ThirdParty/ANGLE/src/compiler/translator/OutputGLSLBase.cpp' l='341' u='r' c='_ZN2sh15TOutputGLSLBase20mapQualifierToStringENS_10TQualifierE'/>
<def f='WebKit/ANGLE/Headers/ANGLE/ShaderLang.h' l='114' type='const ShCompileOptions'/>
<doc f='WebKit/ANGLE/Headers/ANGLE/ShaderLang.h' l='102'>// Due to spec difference between GLSL 4.1 or lower and ESSL3, some platforms (for example, Mac OSX
// core profile) require a variable&apos;s &quot;invariant&quot;/&quot;centroid&quot; qualifiers to match between vertex and
// fragment shader. A simple solution to allow such shaders to link is to omit the two qualifiers.
// AMD driver in Linux requires invariant qualifier to match between vertex and fragment shaders,
// while ESSL3 disallows invariant qualifier in fragment shader and GLSL &gt;= 4.2 doesn&apos;t require
// invariant qualifier to match between shaders. Remove invariant qualifier from vertex shader to
// workaround AMD driver bug.
// Note that the two flags take effect on ESSL3 input shaders translated to GLSL 4.1 or lower and to
// GLSL 4.2 or newer on Linux AMD.
// TODO(zmo): This is not a good long-term solution. Simply dropping these qualifiers may break some
// developers&apos; content. A more complex workaround of dynamically generating, compiling, and
// re-linking shaders that use these qualifiers should be implemented.</doc>
