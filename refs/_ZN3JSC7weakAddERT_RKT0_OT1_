<def f='WebKit/JavaScriptCore/PrivateHeaders/JavaScriptCore/WeakInlines.h' l='127' ll='131' type='void JSC::weakAdd(Map &amp; map, const Key &amp; key, Value &amp;&amp; value)'/>
<doc f='WebKit/JavaScriptCore/PrivateHeaders/JavaScriptCore/WeakInlines.h' l='125'>// This function helps avoid modifying a weak table while holding an iterator into it. (Object allocation
// can run a finalizer that modifies the table. We avoid that by requiring a pre-constructed object as our value.)</doc>
<def f='WebKit/Source/JavaScriptCore/heap/WeakInlines.h' l='127' ll='131' type='void JSC::weakAdd(Map &amp; map, const Key &amp; key, Value &amp;&amp; value)'/>
<doc f='WebKit/Source/JavaScriptCore/heap/WeakInlines.h' l='125'>// This function helps avoid modifying a weak table while holding an iterator into it. (Object allocation
// can run a finalizer that modifies the table. We avoid that by requiring a pre-constructed object as our value.)</doc>
<use f='WebKit/Source/JavaScriptCore/runtime/RegExpCache.cpp' l='47' u='c' c='_ZN3JSC11RegExpCache14lookupOrCreateERKN3WTF6StringENS1_9OptionSetINS_4Yarr5FlagsEEE'/>
<use f='WebKit/Source/WebCore/bridge/runtime_root.cpp' l='186' u='c' c='_ZN3JSC8Bindings10RootObject16addRuntimeObjectERNS_2VMEPNS0_13RuntimeObjectE'/>
