<def f='WebKit/Source/JavaScriptCore/dfg/DFGObjectAllocationSinkingPhase.cpp' l='140' ll='352'/>
<use f='WebKit/Source/JavaScriptCore/dfg/DFGObjectAllocationSinkingPhase.cpp' l='173' c='_ZN3JSC3DFG12_GLOBAL__N_110Allocation3setENS0_26PromotedLocationDescriptorEPNS0_4NodeE'/>
<use f='WebKit/Source/JavaScriptCore/dfg/DFGObjectAllocationSinkingPhase.cpp' l='201' c='_ZN3JSC3DFG12_GLOBAL__N_110Allocation13setStructuresERKNS0_22RegisteredStructureSetE'/>
<use f='WebKit/Source/JavaScriptCore/dfg/DFGObjectAllocationSinkingPhase.cpp' l='209' c='_ZN3JSC3DFG12_GLOBAL__N_110Allocation15mergeStructuresERKS2_'/>
<use f='WebKit/Source/JavaScriptCore/dfg/DFGObjectAllocationSinkingPhase.cpp' l='209' c='_ZN3JSC3DFG12_GLOBAL__N_110Allocation15mergeStructuresERKS2_'/>
<use f='WebKit/Source/JavaScriptCore/dfg/DFGObjectAllocationSinkingPhase.cpp' l='218' c='_ZN3JSC3DFG12_GLOBAL__N_110Allocation16filterStructuresERKNS0_22RegisteredStructureSetE'/>
<use f='WebKit/Source/JavaScriptCore/dfg/DFGObjectAllocationSinkingPhase.cpp' l='271' c='_ZNK3JSC3DFG12_GLOBAL__N_110AllocationeqERKS2_'/>
<use f='WebKit/Source/JavaScriptCore/dfg/DFGObjectAllocationSinkingPhase.cpp' l='280' c='_ZNK3JSC3DFG12_GLOBAL__N_110AllocationneERKS2_'/>
<use f='WebKit/Source/JavaScriptCore/dfg/DFGObjectAllocationSinkingPhase.cpp' l='356' c='_ZN3JSC3DFG12_GLOBAL__N_19LocalHeap13newAllocationEPNS0_4NodeENS1_10Allocation4KindE'/>
<use f='WebKit/Source/JavaScriptCore/dfg/DFGObjectAllocationSinkingPhase.cpp' l='360' c='_ZN3JSC3DFG12_GLOBAL__N_19LocalHeap13newAllocationEPNS0_4NodeENS1_10Allocation4KindE'/>
<use f='WebKit/Source/JavaScriptCore/dfg/DFGObjectAllocationSinkingPhase.cpp' l='400' c='_ZN3JSC3DFG12_GLOBAL__N_19LocalHeap13getAllocationEPNS0_4NodeE'/>
<use f='WebKit/Source/JavaScriptCore/dfg/DFGObjectAllocationSinkingPhase.cpp' l='431' c='_ZNK3JSC3DFG12_GLOBAL__N_19LocalHeap6followENS0_20PromotedHeapLocationE'/>
<use f='WebKit/Source/JavaScriptCore/dfg/DFGObjectAllocationSinkingPhase.cpp' l='442' c='_ZN3JSC3DFG12_GLOBAL__N_19LocalHeap19onlyLocalAllocationEPNS0_4NodeE'/>
<use f='WebKit/Source/JavaScriptCore/dfg/DFGObjectAllocationSinkingPhase.cpp' l='451' c='_ZN3JSC3DFG12_GLOBAL__N_19LocalHeap19onlyLocalAllocationENS0_20PromotedHeapLocationE'/>
<use f='WebKit/Source/JavaScriptCore/dfg/DFGObjectAllocationSinkingPhase.cpp' l='475' c='_ZN3JSC3DFG12_GLOBAL__N_19LocalHeap12takeEscapeesEv'/>
<use f='WebKit/Source/JavaScriptCore/dfg/DFGObjectAllocationSinkingPhase.cpp' l='651' c='_ZNK3JSC3DFG12_GLOBAL__N_19LocalHeap11allocationsEv'/>
<use f='WebKit/Source/JavaScriptCore/dfg/DFGObjectAllocationSinkingPhase.cpp' l='745' c='_ZN3JSC3DFG12_GLOBAL__N_19LocalHeap16escapeAllocationEPNS0_4NodeE'/>
<use f='WebKit/Source/JavaScriptCore/dfg/DFGObjectAllocationSinkingPhase.cpp' l='749' c='_ZN3JSC3DFG12_GLOBAL__N_19LocalHeap16escapeAllocationEPNS0_4NodeE'/>
<use f='WebKit/Source/JavaScriptCore/dfg/DFGObjectAllocationSinkingPhase.cpp' l='750' c='_ZN3JSC3DFG12_GLOBAL__N_19LocalHeap16escapeAllocationEPNS0_4NodeE'/>
<use f='WebKit/Source/JavaScriptCore/dfg/DFGObjectAllocationSinkingPhase.cpp' l='775' c='_ZN3JSC3DFG12_GLOBAL__N_19LocalHeap5pruneEv'/>
<use f='WebKit/Source/JavaScriptCore/dfg/DFGObjectAllocationSinkingPhase.cpp' l='792'/>
<use f='WebKit/Source/JavaScriptCore/dfg/DFGObjectAllocationSinkingPhase.cpp' l='795'/>
<use f='WebKit/Source/JavaScriptCore/dfg/DFGObjectAllocationSinkingPhase.cpp' l='928' c='_ZN3JSC3DFG12_GLOBAL__N_128ObjectAllocationSinkingPhase24handleInternalFieldClassEPNS0_4NodeERN3WTF7HashMapINS0_26PromotedLocationDescriptorENS0_8Lazy4871758'/>
<use f='WebKit/Source/JavaScriptCore/dfg/DFGObjectAllocationSinkingPhase.cpp' l='930' c='_ZN3JSC3DFG12_GLOBAL__N_128ObjectAllocationSinkingPhase24handleInternalFieldClassEPNS0_4NodeERN3WTF7HashMapINS0_26PromotedLocationDescriptorENS0_8Lazy4871758'/>
<use f='WebKit/Source/JavaScriptCore/dfg/DFGObjectAllocationSinkingPhase.cpp' l='949' c='_ZN3JSC3DFG12_GLOBAL__N_128ObjectAllocationSinkingPhase10handleNodeEPNS0_4NodeERKT_RKT0_'/>
<use f='WebKit/Source/JavaScriptCore/dfg/DFGObjectAllocationSinkingPhase.cpp' l='1048' c='_ZN3JSC3DFG12_GLOBAL__N_128ObjectAllocationSinkingPhase10handleNodeEPNS0_4NodeERKT_RKT0_'/>
<use f='WebKit/Source/JavaScriptCore/dfg/DFGObjectAllocationSinkingPhase.cpp' l='1079' c='_ZN3JSC3DFG12_GLOBAL__N_128ObjectAllocationSinkingPhase10handleNodeEPNS0_4NodeERKT_RKT0_'/>
<use f='WebKit/Source/JavaScriptCore/dfg/DFGObjectAllocationSinkingPhase.cpp' l='1362' c='_ZN3JSC3DFG12_GLOBAL__N_128ObjectAllocationSinkingPhase23determineSinkCandidatesEv'/>
<use f='WebKit/Source/JavaScriptCore/dfg/DFGObjectAllocationSinkingPhase.cpp' l='1408' c='_ZN3JSC3DFG12_GLOBAL__N_128ObjectAllocationSinkingPhase23determineSinkCandidatesEv'/>
<use f='WebKit/Source/JavaScriptCore/dfg/DFGObjectAllocationSinkingPhase.cpp' l='1439' c='_ZN3JSC3DFG12_GLOBAL__N_128ObjectAllocationSinkingPhase23determineSinkCandidatesEv'/>
<use f='WebKit/Source/JavaScriptCore/dfg/DFGObjectAllocationSinkingPhase.cpp' l='1469' c='_ZN3JSC3DFG12_GLOBAL__N_128ObjectAllocationSinkingPhase23determineSinkCandidatesEv'/>
<use f='WebKit/Source/JavaScriptCore/dfg/DFGObjectAllocationSinkingPhase.cpp' l='1476' c='_ZN3JSC3DFG12_GLOBAL__N_128ObjectAllocationSinkingPhase21placeMaterializationsEN3WTF7HashMapIPNS0_4NodeENS1_10AllocationENS3_11DefaultHashIS6_EENS3_1011765522'/>
<use f='WebKit/Source/JavaScriptCore/dfg/DFGObjectAllocationSinkingPhase.cpp' l='1582' c='_ZN3JSC3DFG12_GLOBAL__N_128ObjectAllocationSinkingPhase21placeMaterializationsEN3WTF7HashMapIPNS0_4NodeENS1_10AllocationENS3_11DefaultHashIS6_EENS3_1011765522'/>
<use f='WebKit/Source/JavaScriptCore/dfg/DFGObjectAllocationSinkingPhase.cpp' l='1586' c='_ZN3JSC3DFG12_GLOBAL__N_128ObjectAllocationSinkingPhase21placeMaterializationsEN3WTF7HashMapIPNS0_4NodeENS1_10AllocationENS3_11DefaultHashIS6_EENS3_1011765522'/>
<use f='WebKit/Source/JavaScriptCore/dfg/DFGObjectAllocationSinkingPhase.cpp' l='1596' c='_ZN3JSC3DFG12_GLOBAL__N_128ObjectAllocationSinkingPhase21placeMaterializationsEN3WTF7HashMapIPNS0_4NodeENS1_10AllocationENS3_11DefaultHashIS6_EENS3_1011765522'/>
<use f='WebKit/Source/JavaScriptCore/dfg/DFGObjectAllocationSinkingPhase.cpp' l='1638' c='_ZN3JSC3DFG12_GLOBAL__N_128ObjectAllocationSinkingPhase21placeMaterializationsEN3WTF7HashMapIPNS0_4NodeENS1_10AllocationENS3_11DefaultHashIS6_EENS3_1011765522'/>
<use f='WebKit/Source/JavaScriptCore/dfg/DFGObjectAllocationSinkingPhase.cpp' l='1665' c='_ZN3JSC3DFG12_GLOBAL__N_128ObjectAllocationSinkingPhase21placeMaterializationsEN3WTF7HashMapIPNS0_4NodeENS1_10AllocationENS3_11DefaultHashIS6_EENS3_1011765522'/>
<use f='WebKit/Source/JavaScriptCore/dfg/DFGObjectAllocationSinkingPhase.cpp' l='1667' c='_ZN3JSC3DFG12_GLOBAL__N_128ObjectAllocationSinkingPhase21placeMaterializationsEN3WTF7HashMapIPNS0_4NodeENS1_10AllocationENS3_11DefaultHashIS6_EENS3_1011765522'/>
<use f='WebKit/Source/JavaScriptCore/dfg/DFGObjectAllocationSinkingPhase.cpp' l='1678' c='_ZN3JSC3DFG12_GLOBAL__N_128ObjectAllocationSinkingPhase21placeMaterializationsEN3WTF7HashMapIPNS0_4NodeENS1_10AllocationENS3_11DefaultHashIS6_EENS3_1011765522'/>
<use f='WebKit/Source/JavaScriptCore/dfg/DFGObjectAllocationSinkingPhase.cpp' l='1695' c='_ZN3JSC3DFG12_GLOBAL__N_128ObjectAllocationSinkingPhase21createMaterializationERKNS1_10AllocationEPNS0_4NodeE'/>
<use f='WebKit/Source/JavaScriptCore/dfg/DFGObjectAllocationSinkingPhase.cpp' l='2306' c='_ZN3JSC3DFG12_GLOBAL__N_128ObjectAllocationSinkingPhase23populateMaterializationEPNS0_10BasicBlockEPNS0_4NodeES6_'/>
<use f='WebKit/Source/JavaScriptCore/dfg/DFGObjectAllocationSinkingPhase.cpp' l='2496' c='_ZN3JSC3DFG12_GLOBAL__N_128ObjectAllocationSinkingPhase14createRecoveryEPNS0_10BasicBlockENS0_20PromotedHeapLocationEPNS0_4NodeERb'/>
<size>40</size>
<doc f='WebKit/Source/JavaScriptCore/dfg/DFGObjectAllocationSinkingPhase.cpp' l='58'>// In order to sink object cycles, we use a points-to analysis coupled
// with an escape analysis. This analysis is actually similar to an
// abstract interpreter focused on local allocations and ignoring
// everything else.
//
// We represent the local heap using two mappings:
//
// - A set of the local allocations present in the function, where
//   each of those have a further mapping from
//   PromotedLocationDescriptor to local allocations they must point
//   to.
//
// - A &quot;pointer&quot; mapping from nodes to local allocations, if they must
//   be equal to said local allocation and are currently live. This
//   can be because the node is the actual node that created the
//   allocation, or any other node that must currently point to it -
//   we don&apos;t make a difference.
//
// The following graph is a motivation for why we separate allocations
// from pointers:
//
// Block #0
//  0: NewObject({})
//  1: NewObject({})
//  -: PutByOffset(@0, @1, x)
//  -: PutStructure(@0, {x:0})
//  2: GetByOffset(@0, x)
//  -: Jump(#1)
//
// Block #1
//  -: Return(@2)
//
// Here, we need to remember in block #1 that @2 points to a local
// allocation with appropriate fields and structures information
// (because we should be able to place a materialization on top of
// block #1 here), even though @1 is dead. We *could* just keep @1
// artificially alive here, but there is no real reason to do it:
// after all, by the end of block #0, @1 and @2 should be completely
// interchangeable, and there is no reason for us to artificially make
// @1 more important.
//
// An important point to consider to understand this separation is
// that we should think of the local heap as follow: we have a
// bunch of nodes that are pointers to &quot;allocations&quot; that live
// someplace on the heap, and those allocations can have pointers in
// between themselves as well. We shouldn&apos;t care about whatever
// names we give to the allocations ; what matters when
// comparing/merging two heaps is the isomorphism/comparison between
// the allocation graphs as seen by the nodes.
//
// For instance, in the following graph:
//
// Block #0
//  0: NewObject({})
//  -: Branch(#1, #2)
//
// Block #1
//  1: NewObject({})
//  -: PutByOffset(@0, @1, x)
//  -: PutStructure(@0, {x:0})
//  -: Jump(#3)
//
// Block #2
//  2: NewObject({})
//  -: PutByOffset(@2, undefined, x)
//  -: PutStructure(@2, {x:0})
//  -: PutByOffset(@0, @2, x)
//  -: PutStructure(@0, {x:0})
//  -: Jump(#3)
//
// Block #3
//  -: Return(@0)
//
// we should think of the heaps at tail of blocks #1 and #2 as being
// exactly the same, even though one has @0.x pointing to @1 and the
// other has @0.x pointing to @2, because in essence this should not
// be different from the graph where we hoisted @1 and @2 into a
// single allocation in block #0. We currently will not handle this
// case, because we merge allocations based on the node they are
// coming from, but this is only a technicality for the sake of
// simplicity that shouldn&apos;t hide the deeper idea outlined here.</doc>
<fun r='_ZN3JSC3DFG12_GLOBAL__N_110AllocationC1EPNS0_4NodeENS2_4KindE'/>
<fun r='_ZNK3JSC3DFG12_GLOBAL__N_110Allocation6fieldsEv'/>
<fun r='_ZN3JSC3DFG12_GLOBAL__N_110Allocation6fieldsEv'/>
<fun r='_ZN3JSC3DFG12_GLOBAL__N_110Allocation3getENS0_26PromotedLocationDescriptorE'/>
<fun r='_ZN3JSC3DFG12_GLOBAL__N_110Allocation3setENS0_26PromotedLocationDescriptorEPNS0_4NodeE'/>
<fun r='_ZN3JSC3DFG12_GLOBAL__N_110Allocation6removeENS0_26PromotedLocationDescriptorE'/>
<fun r='_ZNK3JSC3DFG12_GLOBAL__N_110Allocation13hasStructuresEv'/>
<fun r='_ZN3JSC3DFG12_GLOBAL__N_110Allocation13setStructuresERKNS0_22RegisteredStructureSetE'/>
<fun r='_ZN3JSC3DFG12_GLOBAL__N_110Allocation15mergeStructuresERKS2_'/>
<fun r='_ZN3JSC3DFG12_GLOBAL__N_110Allocation16filterStructuresERKNS0_22RegisteredStructureSetE'/>
<fun r='_ZNK3JSC3DFG12_GLOBAL__N_110Allocation10structuresEv'/>
<fun r='_ZNK3JSC3DFG12_GLOBAL__N_110Allocation28structuresForMaterializationEv'/>
<fun r='_ZNK3JSC3DFG12_GLOBAL__N_110Allocation10identifierEv'/>
<fun r='_ZNK3JSC3DFG12_GLOBAL__N_110Allocation4kindEv'/>
<fun r='_ZNK3JSC3DFG12_GLOBAL__N_110Allocation19isEscapedAllocationEv'/>
<fun r='_ZNK3JSC3DFG12_GLOBAL__N_110Allocation18isObjectAllocationEv'/>
<fun r='_ZNK3JSC3DFG12_GLOBAL__N_110Allocation22isActivationAllocationEv'/>
<fun r='_ZNK3JSC3DFG12_GLOBAL__N_110Allocation20isFunctionAllocationEv'/>
<fun r='_ZNK3JSC3DFG12_GLOBAL__N_110Allocation31isInternalFieldObjectAllocationEv'/>
<fun r='_ZNK3JSC3DFG12_GLOBAL__N_110Allocation24isRegExpObjectAllocationEv'/>
<fun r='_ZNK3JSC3DFG12_GLOBAL__N_110AllocationeqERKS2_'/>
<fun r='_ZNK3JSC3DFG12_GLOBAL__N_110AllocationneERKS2_'/>
<fun r='_ZNK3JSC3DFG12_GLOBAL__N_110Allocation4dumpERN3WTF11PrintStreamE'/>
<fun r='_ZNK3JSC3DFG12_GLOBAL__N_110Allocation13dumpInContextERN3WTF11PrintStreamEPNS_11DumpContextE'/>
<mbr r='JSC::DFG::(anonymousnamespace)::Allocation::m_identifier' o='0' t='JSC::DFG::Node *'/>
<mbr r='JSC::DFG::(anonymousnamespace)::Allocation::m_kind' o='64' t='JSC::DFG::(anonymous namespace)::Allocation::Kind'/>
<mbr r='JSC::DFG::(anonymousnamespace)::Allocation::m_fields' o='128' t='JSC::DFG::(anonymous namespace)::Allocation::Fields'/>
<mbr r='JSC::DFG::(anonymousnamespace)::Allocation::m_structures' o='192' t='JSC::DFG::RegisteredStructureSet'/>
<mbr r='JSC::DFG::(anonymousnamespace)::Allocation::m_structuresForMaterialization' o='256' t='JSC::DFG::RegisteredStructureSet'/>
